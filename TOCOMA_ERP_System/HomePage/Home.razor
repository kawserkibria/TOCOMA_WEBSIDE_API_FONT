@page "/Home"
@layout CustomLayout
@inject Microsoft.JSInterop.IJSRuntime JsRuntime;
@inject HttpClient Http
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
    <!-- //mini sidebar section -->
<div class="dashMainContainer px-3 pt-3 pb-5">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="d-flex align-items-center">
                    <img src="images/@empModel.EMPLOYEE_IMAGE" width="50" height="50" alt="" class="rounded-circle">
                    <div class="ml-2 d-flex flex-column justify-content-center">
                        <h4 class="m-0">TOCOMA</h4>
                        <span class="m-0">Welcome to the TOCOMA Admin Console</span>
                    </div>
                </div>
            </div>
        </div>
        <hr>
        <div class="row">

            <div class="col-lg-6">
                <div class="card">
                    <div class="card-header d-flex justify-content-between bg-white border-0 p-2">
                        <div class="d-flex align-items-center">
                            <span class="material-symbols-outlined mr-3">
                                person
                            </span>
                            <h6 class="m-0">Purchase</h6>
                        </div>
                        <div class="d-flex align-items-center">
                            <h6 class="m-0 collapse-title">Manager</h6>
                            <!-- <i class="fa-solid fa-angle-up ml-4"></i> -->
                            <div class="expand-more-dash-icon" data-toggle="collapse" href="#card-01"
                                 role="button" aria-expanded="true" aria-controls="collapseExample">
                                <span class="material-symbols-outlined">
                                    expand_more
                                </span>
                            </div>

                        </div>
                    </div>
                    <div class="card-body p-0 ">
                        <div class="collapse show" id="card-01">
                            <div class="mt-3"></div>
                            <table class="table table-striped">
                                <thead>
                                    <tr>                                        
                                        <td>PO No.</td>
                                        <td>PO Date</td>
                                        <td>PO Total</td>
                                        <td>Status</td>
                                        
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (poList != null)
                                    {
                                        foreach (var item in poList)
                                        {
                                            <tr>                                                
                                                <td style="width:150px"><a @onclick=@(() => PurchaseOrderInvoice(item.PO_NUMBER_LONG_CODE)) style="cursor:pointer;color:Highlight">@item.PO_NUMBER_LONG_CODE</a></td>
                                                <td>@item.PO_DATE</td>
                                                <td>@item.GRAND_TOTAL @item.CURRENCY</td>
                                                <td>@item.SHIPMENT_STATUS</td>
                                                
                                            </tr>
                                        }
                                    }

                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="card">
                    <div class="card-header d-flex justify-content-between bg-white border-0 p-2">
                        <div class="d-flex align-items-center">
                            <span class="material-symbols-outlined mr-3">
                                person
                            </span>
                            <h6 class="m-0">Sales</h6>
                        </div>
                        <div class="d-flex align-items-center">
                            <h6 class="m-0 collapse-title">Manager</h6>
                            <!-- <i class="fa-solid fa-angle-up ml-4"></i> -->
                            <div class="expand-more-dash-icon" data-toggle="collapse" href="#card-02"
                                 role="button" aria-expanded="true" aria-controls="collapseExample">
                                <span class="material-symbols-outlined">
                                    expand_more
                                </span>
                            </div>

                        </div>
                    </div>
                    <div class="card-body p-0 ">
                        <div class="collapse show" id="card-02">
                            <div class="mt-3"></div>
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <td>Qut. Number</td>
                                        <td>Qut. Date</td>
                                        <td>Status</td>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (quotationList != null)
                                    {
                                        foreach (var item in quotationList)
                                        {
                                            <tr>                                                
                                                <td><a style="color:Highlight;cursor:pointer" @onclick=@(() => GetSalesQuotationById(item.SALES_QUOTATION_ID))>@item.QUOTATION_NO</a></td>
                                                <td scope="col">@item.QUOTATION_DATE</td>
                                                <td>Submitted</td>
                                            </tr>
                                        }
                                    }

                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
                
            </div>
            <!-- dashboard card collapse section start -->
            <div class="collapse" id="secondCollapseExample">
                <div class="row">
                    <div class="col-12 col-md-6 col-lg-4 p-3">
                        <div class="card">
                            <div class="card-header d-flex justify-content-between bg-white border-0 p-2">
                                <div class="d-flex align-items-center">
                                    <span class="material-symbols-outlined mr-3">
                                        person
                                    </span>
                                    <h6 class="m-0">Users</h6>
                                </div>
                                <div class="d-flex align-items-center">
                                    <h6 class="m-0 collapse-title">Manager</h6>
                                    <!-- <i class="fa-solid fa-angle-up ml-4"></i> -->
                                    <div class="expand-more-dash-icon" data-toggle="collapse" href="#card-07"
                                         role="button" aria-expanded="true" aria-controls="collapseExample">
                                        <span class="material-symbols-outlined">
                                            expand_more
                                        </span>
                                    </div>

                                </div>
                            </div>
                            <div class="card-body p-0 ">
                                <div class="collapse show" id="card-07">
                                    <div class="mt-3"></div>
                                    <a href="#">
                                        <li class="list-group-item px-3 py-2 border-0 font-weight-bold">
                                            An item
                                        </li>
                                    </a>
                                    <a href="#">
                                        <li class="list-group-item px-3 py-2 border-0 font-weight-bold">
                                            A second
                                            item
                                        </li>
                                    </a>
                                    <a href="#">
                                        <li class="list-group-item px-3 py-2 border-0 font-weight-bold">
                                            A third
                                            item
                                        </li>
                                    </a>
                                    <a href="#">
                                        <li class="list-group-item px-3 py-2 border-0 font-weight-bold">
                                            A fourth
                                            item
                                        </li>
                                    </a>
                                    <a href="#">
                                        <li class="list-group-item px-3 py-2 border-0 font-weight-bold">
                                            And a
                                            fifth one
                                        </li>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
            <div class="row">
                <div class="col-md-3 m-auto d-flex justify-content-center">
                    <button class="border bg-white collapse-btn btn-sm rounded-pill mt-4 w-50 d-flex align-items-center justify-content-center"
                            data-toggle="collapse" href="#secondCollapseExample" role="button" aria-expanded="false"
                            aria-controls="secondCollapseExample">
                        <span class="material-symbols-outlined" style="font-size: 20px">
                            expand_more
                        </span>
                        Show Mores
                    </button>
                </div>
            </div>

            <!-- dashboard card collapse section end -->
            <!-- dashboard Charts section start -->
            <!-- dashboard Charts section end -->
            <hr>
            <div class="chart-section">
                <h2>Charts Section</h2>
                <hr>
                <div class="chart-wrapper py-3">
                    <div class="row mt-3">
                        <div class="col-12 col-md-12">
                            <canvas id="myChart"></canvas>
                        </div>
                    </div>
                </div>
                <div class="chart-wrapper py-3">
                    <div class="row mt-3">
                        <div class="col-12 col-md-12">
                            <canvas id="myChart2"></canvas>
                        </div>
                    </div>
                </div>


            </div>

        </div>
</div>




@code {
    int DepartmentId;
    EmployeeModel empModel = new EmployeeModel();
    List<SalesQuotationView> quotationList = new List<SalesQuotationView>();
    SalesQuotationView salesQuotationInfo = new SalesQuotationView();
    List<PurchaseTermsConditionsModel> termsConditionList = new List<PurchaseTermsConditionsModel>();
    List<SalesQuotationItemView> salesQuotationItemList = new List<SalesQuotationItemView>();
    List<PurchaseOrderViewModel> poList = new List<PurchaseOrderViewModel>();
    List<PurchaseOrderDetailsEntity> purchaseOrderDetailsList = new List<PurchaseOrderDetailsEntity>();
    PurchaseOrderViewModel purchaseOrderView = new PurchaseOrderViewModel();
    protected override async Task OnInitializedAsync()
    {
        DepartmentId = 1;
        empModel.EMPLOYEE_ID = await sessionStorage.GetItemAsync<string>("session_employeeId");
        empModel = await Http.GetJsonAsync<EmployeeModel>(Utility.BaseUrl + "api/Employee/GetEmployeeById/" + empModel.EMPLOYEE_ID);
        quotationList = await Http.GetJsonAsync<List<SalesQuotationView>>(Utility.BaseUrl + "api/Sales/GetAllQuotation");
        poList = await Http.GetJsonAsync<List<PurchaseOrderViewModel>>(Utility.BaseUrl + "api/Purchase/GetPOList");
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JsRuntime.InvokeVoidAsync("JsInteropcollaps");
            //await ijsruntime.InvokeAsync<string>(
            //    "QuillFunctions.createQuill", divEditorElement);


        }

    }
    private async Task GetSalesQuotationById(int poId)
    {

        salesQuotationInfo = await Http.GetJsonAsync<SalesQuotationView>(Utility.BaseUrl + "api/Sales/GetsalesQuotationInfoById/" + poId);
        if (salesQuotationInfo.TERMS_AND_CONDITION != null && salesQuotationInfo.TERMS_AND_CONDITION != "")
        {
            termsConditionList = await Http.GetJsonAsync<List<PurchaseTermsConditionsModel>>(Utility.BaseUrl + "api/Sales/GetSalesTermsAndConditionsByIds/" + salesQuotationInfo.TERMS_AND_CONDITION);
            AppState.SalestermsConditionList = termsConditionList;
        }

        //porder.REPORT_TYPE = "1";
        salesQuotationItemList = await Http.GetJsonAsync<List<SalesQuotationItemView>>(Utility.BaseUrl + "api/Sales/GetSalesQuotationItemListById/" + poId);
        //porder.pOrderDetailsList = purchaseOrderDetailsList;
        AppState.salesQuotation = salesQuotationInfo;
        AppState.salesQuotationitemList = salesQuotationItemList;

        await JsRuntime.InvokeAsync<object>("open", "api/RDLCReport/GetSalesQuotation", "_blank");
    }
    public async Task PurchaseOrderInvoice(string po_number)
    {
        //string packInsId = "";
        //string termsId = "";
        //List<PackagingInstructionModel> packagingInsList = new List<PackagingInstructionModel>();
        //List<PurchaseTermsConditionsModel> termsConditionList = new List<PurchaseTermsConditionsModel>();
        ////purchaseOrderView = new PurchaseOrderViewModel();
        ////purchaseOrderDetailsList = new List<PurchaseOrderDetailsEntity>();





        purchaseOrderView = await Http.GetJsonAsync<PurchaseOrderViewModel>(Utility.BaseUrl + "api/Purchase/GetPurchaseOrderInfo/" + po_number);
        if (purchaseOrderView.VENDOR_TYPE_STATUS == "Local")
        {
            await GetLocal(purchaseOrderView.PO_NUMBER_LONG_CODE);
        }
        else if (purchaseOrderView.VENDOR_TYPE_STATUS == "International")
        {
            await GetInt(purchaseOrderView.PO_NUMBER_LONG_CODE);
        }
        //purchaseOrderDetailsList = await Http.GetJsonAsync<List<PurchaseOrderDetailsEntity>>(Utility.BaseUrl + "api/Purchase/GetPurchaseOrderDetailsByPO_NO/" + po_number);
        //packInsId = purchaseOrderView.PACKAGING_INSTRUCTION;
        //termsId = purchaseOrderView.OTHER_TERMS_AND_CONDITION;
        //if (packInsId != null && packInsId!="") { packagingInsList = await Http.GetJsonAsync<List<PackagingInstructionModel>>(Utility.BaseUrl + "api/Purchase/GetPackagingInstructionById/" + packInsId); }
        //if (termsId != null && termsId !="") { termsConditionList = await Http.GetJsonAsync<List<PurchaseTermsConditionsModel>>(Utility.BaseUrl + "api/Purchase/GetTermsAndConditions/" + termsId); }
        //AppState.porder = purchaseOrderView;
        //AppState.porderDetails = purchaseOrderDetailsList;
        //AppState.termsConditionList = termsConditionList;
        //if (purchaseOrderView.VENDOR_TYPE_STATUS=="Local")
        //{ await js.InvokeAsync<object>("open", "api/RDLCReport/GetPurchaseOrderInvoiceLocal", "_blank"); }
        //else if(purchaseOrderView.VENDOR_TYPE_STATUS == "International")
        //{ await js.InvokeAsync<object>("open", "api/RDLCReport/GetPurchaseOrderInvoiceInt", "_blank"); }


    }

    private async Task GetLocal(string po_number)
    {
        string packInsId = "";
        string termsId = "";
        List<PackagingInstructionModel> packagingInsList = new List<PackagingInstructionModel>();
        List<PurchaseTermsConditionsModel> termsConditionList = new List<PurchaseTermsConditionsModel>();
        purchaseOrderDetailsList = await Http.GetJsonAsync<List<PurchaseOrderDetailsEntity>>(Utility.BaseUrl + "api/Purchase/GetPurchaseOrderDetailsByPO_NO/" + po_number);
        packInsId = purchaseOrderView.PACKAGING_INSTRUCTION;
        termsId = purchaseOrderView.OTHER_TERMS_AND_CONDITION;
        if (packInsId != null && packInsId != "") { packagingInsList = await Http.GetJsonAsync<List<PackagingInstructionModel>>(Utility.BaseUrl + "api/Purchase/GetPackagingInstructionById/" + packInsId); }
        if (termsId != null && termsId != "") { termsConditionList = await Http.GetJsonAsync<List<PurchaseTermsConditionsModel>>(Utility.BaseUrl + "api/Purchase/GetTermsAndConditions/" + termsId); }
        AppState.porder = purchaseOrderView;
        AppState.porderDetails = purchaseOrderDetailsList;
        AppState.termsConditionList = termsConditionList;

        await JsRuntime.InvokeAsync<object>("open", "api/RDLCReport/GetPurchaseOrderInvoiceLocal", "_blank");
    }
    private async Task GetInt(string po_number)
    {
        string packInsId = "";
        string termsId = "";
        List<PackagingInstructionModel> packagingInsList = new List<PackagingInstructionModel>();
        List<PurchaseTermsConditionsModel> termsConditionList = new List<PurchaseTermsConditionsModel>();
        purchaseOrderDetailsList = await Http.GetJsonAsync<List<PurchaseOrderDetailsEntity>>(Utility.BaseUrl + "api/Purchase/GetPurchaseOrderDetailsByPO_NO/" + po_number);
        packInsId = purchaseOrderView.PACKAGING_INSTRUCTION;
        termsId = purchaseOrderView.OTHER_TERMS_AND_CONDITION;
        if (packInsId != null && packInsId != "") { packagingInsList = await Http.GetJsonAsync<List<PackagingInstructionModel>>(Utility.BaseUrl + "api/Purchase/GetPackagingInstructionById/" + packInsId); }
        if (termsId != null && termsId != "") { termsConditionList = await Http.GetJsonAsync<List<PurchaseTermsConditionsModel>>(Utility.BaseUrl + "api/Purchase/GetTermsAndConditions/" + termsId); }
        AppState.porder = purchaseOrderView;
        AppState.porderDetails = purchaseOrderDetailsList;
        AppState.termsConditionList = termsConditionList;
        AppState.packagingList = packagingInsList;

        await JsRuntime.InvokeAsync<object>("open", "api/RDLCReport/GetPurchaseOrderInvoiceInt", "_blank");
    }
}
