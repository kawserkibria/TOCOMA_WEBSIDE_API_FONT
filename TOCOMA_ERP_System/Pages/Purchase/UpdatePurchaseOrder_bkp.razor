@page "/UpdatePurchaseOrder_bkp/{po_number}"
@layout CustomLayout
@using System.Data
@using System.IO
@inject HttpClient Http
@using System.Collections.Generic;
@using System.Data;
@using System.Reflection;
@*@inject IHostingEnvironment _host*@
@inject IToastService toastService
@inject IJSRuntime JSRuntime

<style>
    body {
        font-family: Arial;
    }

    /* Style the tab */
    .tab {
        overflow: hidden;
        border: 1px solid #ccc;
        background-color: #f1f1f1;
    }

        /* Style the buttons inside the tab */
        .tab button {
            background-color: inherit;
            float: left;
            border: none;
            outline: none;
            cursor: pointer;
            padding: 14px 16px;
            transition: 0.3s;
            font-size: 17px;
        }

            /* Change background color of buttons on hover */
            .tab button:hover {
                background-color: #ddd;
            }

            /* Create an active/current tablink class */
            .tab button.active {
                background-color: #ccc;
            }

    /* Style the tab content */
    .tabcontent {
        display: none;
        padding: 6px 12px;
        border: 1px solid #ccc;
        border-top: none;
    }

    table {
        border-collapse: collapse;
    }

    th,
    td {
        border: 1px solid #888;
        padding: 0.25em 0.5em;
    }
</style>

<div class="dashboard-details">
    <h4 class="p-2"><img src="images/fountain-pen.png" alt="" width="50" height="50" class="mr-3"><span class="text-uppercase">GENERATE PURCHASE ORDER</span>  </h4>
    <div class="newRequsitionForm-content">
        <div class="container-fluid">
            <EditForm Model="@purchaseOrderModel" OnValidSubmit="@SavePurchaseOrder">
                <div class="row">
                    <div class="col-lg-6">
                        <div class="row">
                            <div class="col-md-5" style="background-color:steelblue;color:white"><label>Requisition NO:</label></div>
                            <div class="col-md-7">9564-22</div>
                        </div>
                        <div class="row mt-1">
                            <div class="col-md-5" style="background-color:steelblue;color:white"><label>Requester:</label></div>
                            <div class="col-md-7">Iffat</div>
                        </div>
                        <div class="row mt-1">
                            <div class="col-md-5" style="background-color:steelblue;color:white"><label>Department:</label></div>
                            <div class="col-md-7">Supply Chain</div>
                        </div>
                    </div>

                    @*----------------------------New Column-------------------------*@

                    <div class="col-lg-6">
                        <div class="addRequisitionItems">
                            <div class="addRequisitionItemsForm">
                                <div class="row">
                                    <div class="col-md-5" style="background-color:steelblue;color:white"><label>Request Date:</label></div>
                                    <div class="col-md-7">09/02/2022</div>
                                </div>
                                <div class="row mt-1">
                                    <div class="col-md-5" style="background-color:steelblue;color:white"><label>Require Date:</label></div>
                                    <div class="col-md-7">09/05/2022</div>
                                </div>
                                <div class="row mt-1">
                                    <div class="col-md-5" style="background-color:steelblue;color:white"><label>Status:</label></div>
                                    <div class="col-md-7">Approved</div>
                                </div>


                            </div>
                        </div>
                    </div>
                </div>
                <br />
                <fieldset class="border p-4">
                    <legend class="w-auto">Purchase Order(PO)</legend>
                    <div class="row">
                        <div class="col-lg-7">
                            <div class="row">
                                <div class="col-md-5"><label>PO No.:</label></div>
                                <div class="col-md-7"><InputText @bind-Value="@purchaseOrderModel.PO_NUMBER_LONG_CODE" maxlength="100"></InputText></div>
                            </div>
                            <div class="row mt-1">
                                <div class="col-md-5"><label>PO Date:</label></div>
                                <div class="col-md-7"><input style="width:203px" type="text" @bind-value="@po_date" /></div>
                            </div>
                            <div class="row mt-1">
                                <div class="col-md-5"><label>Quotation Ref. No.:</label></div>
                                <div class="col-md-7"><InputText @bind-Value="@purchaseOrderModel.QUOTATION_REFERANCE_NO" maxlength="100"></InputText></div>
                            </div>
                            <div class="row mt-1">
                                <div class="col-md-5"><label>Ref. Date:</label></div>
                                <div class="col-md-7"><input style="width:203px" type="text" @bind-value="@quotation_ref_date" /></div>
                            </div>
                            <div class="row mt-1">
                                <div class="col-md-5"><label>Transection Type:</label></div>
                                <div class="col-md-7">
                                    <InputSelect @bind-Value="@purchaseOrderModel.TRUNSECTION_TYPE" style="width:203px;height:28px">
                                        <option value="Purchase">Purchase</option>
                                    </InputSelect>
                                </div>
                            </div>
                            <div class="row mt-1">
                                <div class="col-md-5"><label>Terms of Delivery:</label></div>
                                <div class="col-md-7"><InputText @bind-Value="@purchaseOrderModel.TERMS_OF_DELIVERY" maxlength="100"></InputText></div>
                            </div>
                            <div class="row mt-1">
                                <div class="col-md-5"><label>Shipping Address:</label></div>
                                <div class="col-md-7"><InputTextArea @bind-Value="@purchaseOrderModel.SHIPPING_ADDRESS" maxlength="100" style="width:300px"></InputTextArea></div>
                            </div>
                            <div class="row mt-1">
                                <div class="col-md-5"><label>Delivery Mode:</label></div>
                                <div class="col-md-7"><InputText @bind-Value="@purchaseOrderModel.DELIVERY_MODE" maxlength="100"></InputText></div>
                            </div>
                            <div class="row mt-1">
                                <div class="col-md-5"><label>Payment Term:</label></div>
                                <div class="col-md-7">
                                    <InputSelect @bind-Value="@purchaseOrderModel.PAYMENT_TERM" style="width:203px;height:28px">
                                        <option value=""></option>
                                        <option value="COD">COD</option>
                                    </InputSelect>
                                </div>
                            </div>
                            <div class="row mt-1">
                                <div class="col-md-5"><label>Payment Mode:</label></div>
                                <div class="col-md-7">
                                    <InputSelect @bind-Value="@purchaseOrderModel.PAYMENT_MODE" style="width:203px;height:28px">
                                        <option value=""></option>
                                        <option value="Cash">Cash</option>
                                        <option value="Cheque">Cheque</option>
                                    </InputSelect>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-5">
                            <div class="row">
                                <div class="col-md-5"><label>Trade Term.:</label></div>
                                <div class="col-md-7"><InputText @bind-Value="@purchaseOrderModel.INCOTERM" maxlength="100"></InputText></div>
                            </div>
                            <div class="row mt-1">
                                <div class="col-md-5"><label>Ship Via:</label></div>
                                <div class="col-md-7"><InputText @bind-Value="@purchaseOrderModel.SHIP_VIA" maxlength="100"></InputText></div>
                            </div>
                            <div class="row mt-1">
                                <div class="col-md-5"><label>Container Size:</label></div>
                                <div class="col-md-7"><InputText @bind-Value="@purchaseOrderModel.CONTAINER_SIZE" maxlength="100"></InputText></div>
                            </div>
                            <div class="row mt-1">
                                <div class="col-md-5"><label>Delivery Time:</label></div>
                                <div class="col-md-7"><InputText @bind-Value="@purchaseOrderModel.DELIVERY_TIME" maxlength="100"></InputText></div>
                            </div>
                            <div class="row mt-1">
                                <div class="col-md-5"><label>Country Of Origin:</label></div>
                                <div class="col-md-7">
                                    <InputSelect @bind-Value="@purchaseOrderModel.COUNTRY_OF_ORIGIN" style="width:203px;height:28px">
                                        <option value=""></option>
                                        <option value="Malaysia">Malaysia</option>
                                        <option value="India">India</option>
                                        <option value="Japan">Japan</option>
                                    </InputSelect>
                                </div>
                            </div>
                            <div class="row mt-1">
                                <div class="col-md-5"><label>Port of Loading:</label></div>
                                <div class="col-md-7"><InputText @bind-Value="@purchaseOrderModel.PORT_OF_LOADING" maxlength="100"></InputText></div>
                            </div>
                            <div class="row mt-1">
                                <div class="col-md-5"><label>Port of Discharge:</label></div>
                                <div class="col-md-7"><InputText @bind-Value="@purchaseOrderModel.PORT_OF_DISCHARGE" maxlength="100"></InputText></div>
                            </div>
                            <div class="row mt-1">
                                <div class="col-md-5"><label>Shipping Mark:</label></div>
                                <div class="col-md-7"><InputText @bind-Value="@purchaseOrderModel.SHIPPING_MARK" maxlength="100"></InputText></div>
                            </div>
                            <div class="row mt-1">
                                <div class="col-md-5"><label>Packaging:</label></div>
                                <div class="col-md-7"><InputTextArea @bind-Value="@purchaseOrderModel.PACKAGING" maxlength="100" style="width:300px"></InputTextArea></div>
                            </div>
                            <div class="row mt-1">
                                <div class="col-md-5"><label>Identification No.:</label></div>
                                <div class="col-md-7"><InputTextArea @bind-Value="@purchaseOrderModel.IDENTIFICATION_NUMBER" maxlength="100" style="width:300px"></InputTextArea></div>
                            </div>
                            <div class="row mt-1">
                                <div class="col-md-5"><label>Label:</label></div>
                                <div class="col-md-7"><InputTextArea @bind-Value="@purchaseOrderModel.LABEL" maxlength="100" style="width:300px"></InputTextArea></div>
                            </div>
                            <div class="row mt-1">
                                <div class="col-md-5"><label>Shelf Life:</label></div>
                                <div class="col-md-7"><InputTextArea @bind-Value="@purchaseOrderModel.SHELF_LIFE" maxlength="100" style="width:300px"></InputTextArea></div>
                            </div>
                        </div>
                    </div>
                </fieldset>
                <h5>PURCHASE ITEMS</h5>
                <div class="analytic_details_contain_two">
                    <table class="table table-striped">
                        <thead style="background-color:steelblue;color:white;height:20px">
                            <tr>
                                <td scope="col" width="60px"></td>
                                <td scope="col">Item Description</td>
                                <td scope="col">Pack Size</td>
                                <td scope="col">UOM</td>
                                <td scope="col">Quantity</td>
                                <td scope="col">Rate</td>
                                <td scope="col">Amount</td>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var tableitem in purchaseDetailsList)
                            {
                                total = Convert.ToDouble(tableitem.QUANTITY) * Convert.ToDouble(tableitem.UNIT_PRICE);
                                //finaltotal += total;
                                <tr>
                                    <td scope="col" width="60px"><a href="#"><span class="oi oi-pencil"></span></a></td>
                                    <td scope="col">@tableitem.ITEM_NAME</td>
                                    <td scope="col">@tableitem.PACK_SIZE</td>
                                    <td scope="col">@tableitem.UOM</td>
                                    <td scope="col">@tableitem.QUANTITY</td>
                                    <td scope="col">@tableitem.UNIT_PRICE</td>
                                    <td scope="col">@total</td>
                                </tr>
                            }
                            <tr>
                                <td colspan="6" style="text-align:right">AIT</td>
                                <td><input type="text" @oninput="AIT_Clicked" /></td>
                            </tr>
                            <tr>
                                <td colspan="6" style="text-align:right">VAT</td>
                                <td><input type="text" @oninput="VAT_Clicked" /></td>
                            </tr>
                            <tr>
                                <td colspan="6" style="text-align:right">Adj</td>
                                <td><input type="text" @oninput="ADJ_Clicked" /></td>
                            </tr>
                            <tr>
                                <td colspan="6" style="text-align:right">Sea-Freight</td>
                                <td><input type="text" @oninput="Sea_Freight_Clicked" /></td>
                            </tr>
                            <tr>
                                <td colspan="6" style="text-align:right">Grand Total</td>
                                <td style="font-weight:bold">@finaltotal</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <br />
                <label>Vendor Type</label>&nbsp;&nbsp;
                <input type="checkbox" checked />&nbsp;&nbsp; <label>LISTED</label>&nbsp;&nbsp;<input type="checkbox" /> &nbsp;&nbsp;<label>UNLISTED</label>
                <br />
                <div class="analytic_details_contain_two">
                    <table class="table table-striped">
                        <thead style="background-color:lightsteelblue;color:white;height:20px">
                            <tr>
                                <td></td>
                                <td scope="col" width="90px">VendorCode</td>
                                <td scope="col">Company Name</td>
                                <td scope="col">Contact No.</td>
                                <td scope="col">Email</td>
                                <td scope="col">Vendor Type</td>


                            </tr>
                        </thead>
                        <tbody>
                            @if (vendorList != null)
                            {
                                foreach (var vendor in vendorList)
                                {
                                    <tr>
                                        @if(vendor.VENDOR_ID==purchaseOrderModel.VENDOR_ID)
                                        {<td scope="col"><input type="checkbox" checked @onchange="eventArgs => { CheckboxClicked(Convert.ToString(vendor.VENDOR_ID), eventArgs.Value); }" /></td> }
                                        else{<td scope="col"><input type="checkbox" @onchange="eventArgs => { CheckboxClicked(Convert.ToString(vendor.VENDOR_ID), eventArgs.Value); }" /></td> }
                                        
                                        <td scope="col" width="90px">@vendor.VENDOR_CODE</td>
                                        <td scope="col">@vendor.VENDOR_NAME</td>
                                        <td scope="col">@vendor.CONTACT_NO</td>
                                        <td scope="col">@vendor.EMAIL</td>
                                        <td scope="col">@vendor.VENDOR_TYPE_STATUS</td>


                                    </tr>
                                }
                            }

                        </tbody>
                    </table>
                </div>


                <fieldset class="border p-4">
                    <legend class="w-auto">Shipment Information</legend>
                    <div class="row">
                        <table>
                            <thead>
                                <tr>
                                    <th colspan="2" style="text-align:center">ETD with QTY</th>
                                    <th colspan="2" style="text-align:center">ETA to CTG</th>
                                    <th colspan="2" style="text-align:center">EA at TL-WH</th>
                                    <th colspan="2" style="text-align:center"></th>
                                </tr>
                                <tr>
                                    <th>1st Date &nbsp;&nbsp;<input type="checkbox" checked="@ETD_1st_Date_CheckStatus" @onchange="eventArgs => { ETD_1st_Date_CheckboxClicked( eventArgs.Value); }" /></th>
                                    <th><input type="date" @bind-value="@ETD_1st_Date" disabled="@ETD_1st_Date_IsDisabled" /></th>

                                    <th>1st Date &nbsp;&nbsp;<input type="checkbox" checked="@ETA_1st_Date_CheckStatus" @onchange="eventArgs => { ETA_1st_Date_CheckboxClicked( eventArgs.Value); }" /></th>
                                    <th><input type="date" @bind-value="@ETA_1st_Date" id="dt_ETD_1st" disabled="@ETA_1st_Date_IsDisabled" /></th>

                                    <th>1st Date &nbsp;&nbsp;<input type="checkbox" checked="@EA_1st_Date_CheckStatus" @onchange="eventArgs => { EA_1st_Date_CheckboxClicked( eventArgs.Value); }" /></th>
                                    <th><input type="date" @bind-value="@EA_1st_Date" id="dt_ETD_1st" disabled="@EA_1st_Date_IsDisabled" /></th>

                                    <th>Received Date &nbsp;&nbsp;<input type="checkbox" checked="@Received_Date_CheckStatus" @onchange="eventArgs => { Received_Date_CheckboxClicked( eventArgs.Value); }" /></th>
                                    <th><input type="date" @bind-value="@Received_Date" id="dt_ETD_1st" disabled="@Received_Date_IsDisabled" /></th>
                                </tr>
                                <tr>
                                    <th>2nd date &nbsp;&nbsp;<input type="checkbox" checked="@ETD_2nd_Date_CheckStatus" @onchange="eventArgs => { ETD_2nd_Date_CheckboxClicked( eventArgs.Value); }" /></th>
                                    <th><input type="date" @bind-value="@ETD_2nd_Date" id="dt_ETD_1st" disabled="@ETD_2nd_Date_IsDisabled" /></th>

                                    <th>2nd date &nbsp;&nbsp;<input type="checkbox" checked="@ETA_2nd_Date_CheckStatus" @onchange="eventArgs => { ETA_2nd_Date_CheckboxClicked( eventArgs.Value); }" /></th>
                                    <th><input type="date" @bind-value="@ETA_2nd_Date" id="dt_ETD_1st" disabled="@ETA_2nd_Date_IsDisabled" /></th>

                                    <th>2nd date &nbsp;&nbsp;<input type="checkbox" checked="@EA_2nd_Date_CheckStatus" @onchange="eventArgs => { EA_2nd_Date_CheckboxClicked( eventArgs.Value); }" /></th>
                                    <th><input type="date" @bind-value="@EA_2nd_Date" id="dt_ETD_1st" disabled="@EA_2nd_Date_IsDisabled" /></th>
                                    <th>Shipment Status</th>
                                    <th>
                                        <InputSelect @bind-Value="@purchaseOrderModel.SHIPMENT_STATUS" style="width:175px;height:28px">
                                            <option value=""></option>
                                            <option value="Order">Order</option>
                                            <option value="OnProcess">OnProcess</option>
                                            <option value="Success">Success</option>
                                            <option value="Cancel">Cancel</option>
                                        </InputSelect>
                                    </th>
                                </tr>
                                <tr>
                                    <th>3rd Date &nbsp;&nbsp;<input type="checkbox" checked="@ETD_3rd_Date_CheckStatus" @onchange="eventArgs => { ETD_3rd_Date_CheckboxClicked( eventArgs.Value); }" /></th>
                                    <th><input type="date" @bind-value="@ETD_3rd_Date" id="dt_ETD_1st" disabled="@ETD_3rd_Date_IsDisabled" /></th>

                                    <th>3rd Date &nbsp;&nbsp;<input type="checkbox" checked="@ETA_3rd_Date_CheckStatus" @onchange="eventArgs => { ETA_3rd_Date_CheckboxClicked( eventArgs.Value); }" /></th>
                                    <th><input type="date" @bind-value="@ETA_3rd_Date" id="dt_ETD_1st" disabled="@ETA_3rd_Date_IsDisabled" /></th>

                                    <th>3rd Date &nbsp;&nbsp;<input type="checkbox" checked="@EA_3rd_Date_CheckStatus" @onchange="eventArgs => { EA_3rd_Date_CheckboxClicked( eventArgs.Value); }" /></th>
                                    <th><input type="date" @bind-value="@EA_3rd_Date" id="dt_ETD_1st" disabled="@EA_3rd_Date_IsDisabled" /></th>

                                    <th colspan="2"></th>
                                </tr>
                                <tr>
                                    <th>4th Date &nbsp;&nbsp;<input type="checkbox" checked="@ETD_4th_Date_CheckStatus" @onchange="eventArgs => { ETD_4th_Date_CheckboxClicked( eventArgs.Value); }" /></th>
                                    <th><input type="date" @bind-value="@ETD_4th_Date" id="dt_ETD_1st" disabled="@ETD_4th_Date_IsDisabled" /></th>

                                    <th>4th Date &nbsp;&nbsp;<input type="checkbox" checked="@ETA_4th_Date_CheckStatus" @onchange="eventArgs => { ETA_4th_Date_CheckboxClicked( eventArgs.Value); }" /></th>
                                    <th><input type="date" @bind-value="@ETA_4th_Date" id="dt_ETD_1st" disabled="@ETA_4th_Date_IsDisabled" /></th>

                                    <th>4th Date &nbsp;&nbsp;<input type="checkbox" checked="@EA_4th_Date_CheckStatus" @onchange="eventArgs => { EA_4th_Date_CheckboxClicked( eventArgs.Value); }" /></th>
                                    <th><input type="date" @bind-value="@EA_4th_Date" id="dt_ETD_1st" disabled="@EA_4th_Date_IsDisabled" /></th>
                                    <th colspan="2"></th>

                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>

                        @*<div class="col-lg-4">

                                <div class="row">
                                    <div class="col-md-5"><label>PO Date:</label></div>
                                    <div class="col-md-7"><input style="width:190px" type="date" @bind-value="@po_date" /></div>
                                </div>


                            </div>*@
                    </div>
                </fieldset>
                @*<div class="col-4 d-flex align-items-end" style="margin-top:100px">
                        <button class="btn btn-info" style="border:none;border-radius:10px">GENERATE PO</button>&nbsp;&nbsp;&nbsp;
                        <button @onclick="CreatePurchaseOrder" class="btn btn-info" style="border:none;border-radius:10px">PRINT PO</button>
                    </div>*@
                <div class="col-4 d-flex " style="margin:20px 0 20px">
                    @*<button class="btn btn-info" style="border:none;border-radius:10px;width:150px;margin-left:275px">Save</button>&nbsp;&nbsp;&nbsp;*@
                    <button class="btn btn-info">Update PO</button>&nbsp;&nbsp;&nbsp;
                    @*<button @onclick="CreatePurchaseOrder" class="btn btn-info" style="border:none;border-radius:10px">PRINT PO</button>*@
                </div>
            </EditForm>
        </div>

    </div>

</div>
 
@code {
    [Parameter]
    public string po_number { get; set; }
    //private ReportService _ReportService = new ReportService();
    DataSet DS_OUTPUT_DATA = new DataSet();
    List<ItemEntity> productList = new List<ItemEntity>();
    PurchaseOrderEntity purchaseOrder = new PurchaseOrderEntity();

    PurchaseOrderModel purchaseOrderModel = new PurchaseOrderModel();
    //Purch purchaseorderview = new PurchaseOrderViewModel();
    List<VendorEntity> vendorList = new List<VendorEntity>();
    PRE pp = new PRE();
    List<OrderItemEntity> requestItemList = new List<OrderItemEntity>();
    POModel poModel = new POModel();
    //DateTime po_date = System.DateTime.Now;
    string po_date;
    //DateTime quotation_ref_date = System.DateTime.Now;
    string quotation_ref_date = "";
    DateTime ETD_1st_Date = System.DateTime.Now;
    DateTime ETD_2nd_Date = System.DateTime.Now;
    DateTime ETD_3rd_Date = System.DateTime.Now;
    DateTime ETD_4th_Date = System.DateTime.Now;

    DateTime ETA_1st_Date = System.DateTime.Now;
    DateTime ETA_2nd_Date = System.DateTime.Now;
    DateTime ETA_3rd_Date = System.DateTime.Now;
    DateTime ETA_4th_Date = System.DateTime.Now;

    DateTime EA_1st_Date = System.DateTime.Now;
    DateTime EA_2nd_Date = System.DateTime.Now;
    DateTime EA_3rd_Date = System.DateTime.Now;
    DateTime EA_4th_Date = System.DateTime.Now;

    DateTime Received_Date = System.DateTime.Now;
    //PurchaseOrderViewModel purchaseOrderViewModel = new PurchaseOrderViewModel();
    PurchaseOrderDetailsEntity details = new PurchaseOrderDetailsEntity();
    List<PurchaseOrderDetailsEntity> purchaseDetailsList = new List<PurchaseOrderDetailsEntity>();
    protected bool ETD_1st_Date_IsDisabled { get; set; }
    protected bool ETD_2nd_Date_IsDisabled { get; set; }
    protected bool ETD_3rd_Date_IsDisabled { get; set; }
    protected bool ETD_4th_Date_IsDisabled { get; set; }

    protected bool ETD_1st_Date_CheckStatus { get; set; }
    protected bool ETD_2nd_Date_CheckStatus { get; set; }
    protected bool ETD_3rd_Date_CheckStatus { get; set; }
    protected bool ETD_4th_Date_CheckStatus { get; set; }

    //----------------------

    protected bool ETA_1st_Date_IsDisabled { get; set; }
    protected bool ETA_2nd_Date_IsDisabled { get; set; }
    protected bool ETA_3rd_Date_IsDisabled { get; set; }
    protected bool ETA_4th_Date_IsDisabled { get; set; }

    protected bool ETA_1st_Date_CheckStatus { get; set; }
    protected bool ETA_2nd_Date_CheckStatus { get; set; }
    protected bool ETA_3rd_Date_CheckStatus { get; set; }
    protected bool ETA_4th_Date_CheckStatus { get; set; }

    //----------------

    protected bool EA_1st_Date_IsDisabled { get; set; }
    protected bool EA_2nd_Date_IsDisabled { get; set; }
    protected bool EA_3rd_Date_IsDisabled { get; set; }
    protected bool EA_4th_Date_IsDisabled { get; set; }

    protected bool EA_1st_Date_CheckStatus { get; set; }
    protected bool EA_2nd_Date_CheckStatus { get; set; }
    protected bool EA_3rd_Date_CheckStatus { get; set; }
    protected bool EA_4th_Date_CheckStatus { get; set; }

    protected bool Received_Date_IsDisabled { get; set; }
    protected bool Received_Date_CheckStatus { get; set; }


    double total = 0;
    double finaltotal = 0;
    double ITEMtotal = 0;
    double AIT;
    double VAT;
    double ADJ;
    double SeaFreight;
    double GRAND_TOTAL = 0;

    //protected bool IsDisabled { get; set; }




    //[Parameter]
    //public string Format { get; set; } = "dd/mm/yyyy";




    protected override async Task OnInitializedAsync()
    {
        date_disabled();
        purchaseOrderModel = await Http.GetJsonAsync<PurchaseOrderModel>(Utility.BaseUrl + "api/Purchase/GetPurchaseOrderByPO/" + po_number);
        purchaseDetailsList = await Http.GetJsonAsync<List<PurchaseOrderDetailsEntity>>(Utility.BaseUrl + "api/Purchase/GetPurchaseOrderDetailsByPO_NO/" + po_number);
        vendorList = await Http.GetJsonAsync<List<VendorEntity>>(Utility.BaseUrl + "api/Vendor");
        GetData();
        GetTotal();
    }
    private void GetData()
    {

        //purchaseOrderModel.PO_NUMBER_LONG_CODE = purchaseorderview.PO_NUMBER_LONG_CODE;
        po_date = Convert.ToString(purchaseOrderModel.PO_DATE);
        quotation_ref_date = purchaseOrderModel.QUOTATION_REFERANCE_DATE;
        if (purchaseOrderModel.ETD_1st_Date != null)
        {
            ETD_1st_Date_IsDisabled = false;
            ETD_1st_Date_CheckStatus = true;
            ETD_1st_Date = Convert.ToDateTime(purchaseOrderModel.ETD_1st_Date);
        }
        if (purchaseOrderModel.ETD_2nd_Date != null)
        {
            ETD_2nd_Date_IsDisabled = false;
            ETD_2nd_Date_CheckStatus = true;
            ETD_2nd_Date = Convert.ToDateTime(purchaseOrderModel.ETD_2nd_Date);
        }
        if (purchaseOrderModel.ETD_3rd_Date != null)
        {
            ETD_3rd_Date_IsDisabled = false;
            ETD_3rd_Date_CheckStatus = true;
            ETD_3rd_Date = Convert.ToDateTime(purchaseOrderModel.ETD_3rd_Date);
        }
        if (purchaseOrderModel.ETD_4th_Date != null)
        {
            ETD_4th_Date_IsDisabled = false;
            ETD_4th_Date_CheckStatus = true;
            ETD_4th_Date = Convert.ToDateTime(purchaseOrderModel.ETD_4th_Date);
        }
        //--------------------------- ETD Date End
        if (purchaseOrderModel.ETA_1st_Date != null)
        {
            ETA_1st_Date_IsDisabled = false;
            ETA_1st_Date_CheckStatus = true;
            ETA_1st_Date = Convert.ToDateTime(purchaseOrderModel.ETA_1st_Date);
        }
        if (purchaseOrderModel.ETA_2nd_Date != null)
        {
            ETA_2nd_Date_IsDisabled = false;
            ETA_2nd_Date_CheckStatus = true;
            ETA_2nd_Date = Convert.ToDateTime(purchaseOrderModel.ETA_2nd_Date);
        }
        if (purchaseOrderModel.ETA_3rd_Date != null)
        {
            ETA_3rd_Date_IsDisabled = false;
            ETA_3rd_Date_CheckStatus = true;
            ETA_3rd_Date = Convert.ToDateTime(purchaseOrderModel.ETA_3rd_Date);
        }
        if (purchaseOrderModel.ETA_4th_Date != null)
        {
            ETA_4th_Date_IsDisabled = false;
            ETA_4th_Date_CheckStatus = true;
            ETA_4th_Date = Convert.ToDateTime(purchaseOrderModel.ETA_4th_Date);
        }
        //-----------ETA Date End

        if (purchaseOrderModel.EA_WH_1st_Date != null)
        {
            EA_1st_Date_IsDisabled = false;
            EA_1st_Date_CheckStatus = true;
            EA_1st_Date = Convert.ToDateTime(purchaseOrderModel.EA_WH_1st_Date);
        }
        if (purchaseOrderModel.EA_WH_2nd_Date != null)
        {
            EA_2nd_Date_IsDisabled = false;
            EA_2nd_Date_CheckStatus = true;
            EA_2nd_Date = Convert.ToDateTime(purchaseOrderModel.EA_WH_2nd_Date);
        }
        if (purchaseOrderModel.EA_WH_3rd_Date != null)
        {
            EA_3rd_Date_IsDisabled = false;
            EA_3rd_Date_CheckStatus = true;
            EA_3rd_Date = Convert.ToDateTime(purchaseOrderModel.EA_WH_3rd_Date);
        }
        if (purchaseOrderModel.EA_WH_4th_Date != null)
        {
            EA_4th_Date_IsDisabled = false;
            EA_4th_Date_CheckStatus = true;
            EA_4th_Date = Convert.ToDateTime(purchaseOrderModel.EA_WH_4th_Date);
        }
        //------EA Date End

        if(purchaseOrderModel.RECEIVED_DATE!=null)
        {
            Received_Date_IsDisabled = false;
            Received_Date_CheckStatus = true;
            Received_Date = Convert.ToDateTime(purchaseOrderModel.RECEIVED_DATE);
        }

    }
    protected void date_disabled()
    {
        ETD_1st_Date_IsDisabled = true;
        ETD_2nd_Date_IsDisabled = true;
        ETD_3rd_Date_IsDisabled = true;
        ETD_4th_Date_IsDisabled = true;

        ETA_1st_Date_IsDisabled = true;
        ETA_2nd_Date_IsDisabled = true;
        ETA_3rd_Date_IsDisabled = true;
        ETA_4th_Date_IsDisabled = true;

        EA_1st_Date_IsDisabled = true;
        EA_2nd_Date_IsDisabled = true;
        EA_3rd_Date_IsDisabled = true;
        EA_4th_Date_IsDisabled = true;
        Received_Date_IsDisabled = true;
    }
    async void ETD_1st_Date_CheckboxClicked(object checkedValue)
    {
        if ((bool)checkedValue)
        { ETD_1st_Date_IsDisabled = false; }
        else
        { ETD_1st_Date_IsDisabled = true; }
    }
    async void ETD_2nd_Date_CheckboxClicked(object checkedValue)
    {
        if ((bool)checkedValue)
        { ETD_2nd_Date_IsDisabled = false; }
        else
        { ETD_2nd_Date_IsDisabled = true; }
    }
    async void ETD_3rd_Date_CheckboxClicked(object checkedValue)
    {
        if ((bool)checkedValue)
        { ETD_3rd_Date_IsDisabled = false; }
        else
        { ETD_3rd_Date_IsDisabled = true; }
    }
    async void ETD_4th_Date_CheckboxClicked(object checkedValue)
    {
        if ((bool)checkedValue)
        { ETD_4th_Date_IsDisabled = false; }
        else
        { ETD_4th_Date_IsDisabled = true; }
    }
    async void ETA_1st_Date_CheckboxClicked(object checkedValue)
    {
        if ((bool)checkedValue)
        { ETA_1st_Date_IsDisabled = false; }
        else
        { ETA_1st_Date_IsDisabled = true; }
    }
    async void ETA_2nd_Date_CheckboxClicked(object checkedValue)
    {
        if ((bool)checkedValue)
        { ETA_2nd_Date_IsDisabled = false; }
        else
        { ETA_2nd_Date_IsDisabled = true; }
    }
    async void ETA_3rd_Date_CheckboxClicked(object checkedValue)
    {
        if ((bool)checkedValue)
        { ETA_3rd_Date_IsDisabled = false; }
        else
        { ETA_3rd_Date_IsDisabled = true; }
    }
    async void ETA_4th_Date_CheckboxClicked(object checkedValue)
    {
        if ((bool)checkedValue)
        { ETA_4th_Date_IsDisabled = false; }
        else
        { ETA_4th_Date_IsDisabled = true; }
    }
    async void EA_1st_Date_CheckboxClicked(object checkedValue)
    {
        if ((bool)checkedValue)
        { EA_1st_Date_IsDisabled = false; }
        else
        { EA_1st_Date_IsDisabled = true; }
    }
    async void EA_2nd_Date_CheckboxClicked(object checkedValue)
    {
        if ((bool)checkedValue)
        { EA_2nd_Date_IsDisabled = false; }
        else
        { EA_2nd_Date_IsDisabled = true; }
    }
    async void EA_3rd_Date_CheckboxClicked(object checkedValue)
    {
        if ((bool)checkedValue)
        { EA_3rd_Date_IsDisabled = false; }
        else
        { EA_3rd_Date_IsDisabled = true; }
    }
    async void EA_4th_Date_CheckboxClicked(object checkedValue)
    {
        if ((bool)checkedValue)
        { EA_4th_Date_IsDisabled = false; }
        else
        { EA_4th_Date_IsDisabled = true; }
    }
    async void Received_Date_CheckboxClicked(object checkedValue)
    {
        if ((bool)checkedValue)
        { Received_Date_IsDisabled = false; }
        else
        { Received_Date_IsDisabled = true; }
    }

    private void AIT_Clicked(ChangeEventArgs changeEventArgs)
    {
        //double sum= requestItemList.Sum(x => Convert.ToDouble(x.Quantity) * Convert.ToDouble(x.Rate));
        //if (changeEventArgs.Value.ToString() != "") { finaltotal = finaltotal + Convert.ToDouble(changeEventArgs.Value.ToString()); }
        //else { finaltotal = finaltotal + 0; }

        if (changeEventArgs.Value.ToString() != "") { AIT = Convert.ToDouble(changeEventArgs.Value.ToString()); }
        else { AIT = 0; }
        //AIT = Convert.ToDouble(changeEventArgs.Value.ToString());
        GetTotal();
    }
    private void VAT_Clicked(ChangeEventArgs changeEventArgs)
    {
        //double sum = requestItemList.Sum(x => Convert.ToDouble(x.Quantity) * Convert.ToDouble(x.Rate));
        //finaltotal = finaltotal + Convert.ToDouble(changeEventArgs.Value.ToString());
        //VAT= Convert.ToDouble(changeEventArgs.Value.ToString());
        if (changeEventArgs.Value.ToString() != "") { VAT = Convert.ToDouble(changeEventArgs.Value.ToString()); }
        else { VAT = 0; }
        GetTotal();
    }
    private void ADJ_Clicked(ChangeEventArgs changeEventArgs)
    {
        //double sum = requestItemList.Sum(x => Convert.ToDouble(x.Quantity) * Convert.ToDouble(x.Rate));
        //finaltotal = finaltotal + Convert.ToDouble(changeEventArgs.Value.ToString());
        if (changeEventArgs.Value.ToString() != "") { ADJ = Convert.ToDouble(changeEventArgs.Value.ToString()); }
        else { ADJ = 0; }
        GetTotal();
        //ADJ = Convert.ToDouble(changeEventArgs.Value.ToString());
    }
    private void Sea_Freight_Clicked(ChangeEventArgs changeEventArgs)
    {
        if (changeEventArgs.Value.ToString() != "") { SeaFreight = Convert.ToDouble(changeEventArgs.Value.ToString()); }
        else { SeaFreight = 0; }
        GetTotal();
    }
    private void GetTotal()
    {
        finaltotal = purchaseDetailsList.Sum(x => Convert.ToDouble(x.QUANTITY) * Convert.ToDouble(x.UNIT_PRICE));

        if (AIT != 0)
        { finaltotal = finaltotal + AIT; }
        if (VAT != 0)
        { finaltotal = finaltotal + VAT; }
        if (ADJ != 0)
        { finaltotal = finaltotal + ADJ; }
        if (SeaFreight != 0)
        { finaltotal = finaltotal + SeaFreight; }

    }
    public class ListtoDataTable
    {
        public DataTable ToDataTable<T>(List<T> items)
        {
            DataTable dataTable = new DataTable(typeof(T).Name);
            //Get all the properties by using reflection
            PropertyInfo[] Props = typeof(T).GetProperties(BindingFlags.Public | BindingFlags.Instance);
            foreach (PropertyInfo prop in Props)
            {
                //Setting column names as Property names
                dataTable.Columns.Add(prop.Name);
            }
            foreach (T item in items)
            {
                var values = new object[Props.Length];
                for (int i = 0; i < Props.Length; i++)
                {

                    values[i] = Props[i].GetValue(item, null);
                }
                dataTable.Rows.Add(values);
            }

            return dataTable;
        }
    }


    private async Task CreatePurchaseOrder()
    {

        pp.REQUISITION_NO = "1234";
        pp.REQUESTED_BY = "Asad";
        //var datea=await Http.PostJsonAsync<PurchaseOrderEntity>("https://localhost:44350/Report/CreateReport", purchaseOrder);
        //await _http.PostJsonAsync<UnitEntity>("api/units", unit);
        await Http.PostJsonAsync("https://localhost:44350/Report/CreateReport", purchaseOrder);
        //await Http.PostJsonAsync<PRE>(Utility.BaseUrl + "api/Purchase/GenerateReport/", pp);


        //int report_no = 1;
        //SALES_FROM_TO = "";
        //SALES_FROM_TO = DT_SALES_FROM.Text + "  to  " + DT_SALES_TO.Text;
        //string SEARCH_CONDITION = "";
        //SEARCH_CONDITION = GetSearchConditionForSales();
        //SearchReport1CustomerList(report_no, SEARCH_CONDITION);
        //CreateOutputReport(DS_OUTPUT_DATA);

        //PrintInformationOutputItem outputItem = new PrintInformationOutputItem();
        //try
        //{
        //    productList = await Http.GetJsonAsync<List<ItemEntity>>(Utility.BaseUrl + "api/Product");
        //    DataTable DS = new DataTable();
        //    ListtoDataTable lsttodt = new ListtoDataTable();
        //    DataTable dt = lsttodt.ToDataTable(productList);
        //    DataTable dt1 = new DataTable();
        //    dt1.Columns.Add(new DataColumn("1", typeof(string)));
        //    //dt1.Rows[0].ItemArray[0] = 1;
        //    DS_OUTPUT_DATA.Tables.Add(dt);
        //    DS_OUTPUT_DATA.Tables.Add(dt1);
        //    //foreach (var items in productList)
        //    //{

        //    //    DS.Columns.Add(items.ITEM_CODE);
        //    //    DS.Columns.Add(items.ITEM_NAME);
        //    //    DS.Columns.Add(Convert.ToString(items.ITEM_RATE));



        //    //    //DS_OUTPUT_DATA.Tables.Add(items.ITEM_CODE);
        //    //    //DS_OUTPUT_DATA.Tables.Add(items.ITEM_NAME);
        //    //    //DS_OUTPUT_DATA.Tables.Add(Convert.ToString(items.ITEM_RATE));
        //    //    //DS_OUTPUT_DATA.Tables.Add(Convert.ToString("1"));

        //    //}
        //    //DS_OUTPUT_DATA = DS;

        //    outputItem.dataSet = DS_OUTPUT_DATA;
        //    if (DS_OUTPUT_DATA != null && DS_OUTPUT_DATA.Tables[0].Rows.Count > 0)
        //    { _ReportService.output(OutputReportSupport.GetReportConfig(outputItem), outputItem.dataSet); }
        //    else { }
        //}
        //catch (Exception ex)
        //{ }
        //_ReportService.output(OutputReportSupport.GetReportConfig(outputItem), outputItem.dataSet);
        //webCellReport1.FileName = "Purchase_Report";
        //webCellReport1.Report.Start();
        //webCellReport1.Report.File();
        //webCellReport1.Page.Start("Purchase", "1");

        //webCellReport1.Page.End();
        //webCellReport1.Report.End();
        //MemoryStream memoryStream = new MemoryStream();
        //webCellReport1.Report.SaveAs(memoryStream);
        //contentType = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";
        //fileName = "authors.xlsx";
        //Response.Clear();
        //Response.ContentType = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";
        //Response.AddHeader("content-disposition", "attachment; filename=" + "ABC" + ".xlsx");
        //Response.BinaryWrite(memoryStream.ToArray());
        //memoryStream.Close();
        //Response.End();


    }
    private async void CheckboxClicked(string vendor_Id, object checkedValue)
    {
        if ((bool)checkedValue)
        {
            purchaseOrderModel.VENDOR_ID = Convert.ToInt32(vendor_Id);
        }
    }
    public async Task SavePurchaseOrder()
    {

        if (IsValidation() != true)
        {
            try
            {
                //purchaseRequisition.REQUEST_DATE = request_date;
                //purchaseRequisition.REQUIRED_DATE = require_date;
                //purchaseRequisition.REQUISITION_TOTAL = requisitionTotal;
                //purchaseRequisition.STATUS = "Open";
                //purchaseRequisition.REG_BY = "Asad";
                
                //DateTime oDate = Convert.ToDateTime(po_date);
                purchaseOrderModel.PO_DATE = po_date;
                purchaseOrderModel.QUOTATION_REFERANCE_DATE = quotation_ref_date;
                purchaseOrderModel.REG_BY = "Asad";
                purchaseOrderModel.CONSIGNEE_ID = 1;
                if (ETD_1st_Date_IsDisabled != true)
                { purchaseOrderModel.ETD_1st_Date = Convert.ToString(ETD_1st_Date); }
                else { purchaseOrderModel.ETD_1st_Date = null; }
                if (ETD_2nd_Date_IsDisabled != true)
                { purchaseOrderModel.ETD_2nd_Date = Convert.ToString(ETD_2nd_Date); }
                else { purchaseOrderModel.ETD_2nd_Date = null; }
                if (ETD_3rd_Date_IsDisabled != true)
                { purchaseOrderModel.ETD_3rd_Date = Convert.ToString(ETD_3rd_Date); }
                else { purchaseOrderModel.ETD_3rd_Date = null; }
                if (ETD_4th_Date_IsDisabled != true)
                { purchaseOrderModel.ETD_4th_Date = Convert.ToString(ETD_4th_Date); }
                else { purchaseOrderModel.ETD_4th_Date = null; }

                if (ETA_1st_Date_IsDisabled != true)
                { purchaseOrderModel.ETA_1st_Date = Convert.ToString(ETA_1st_Date); }
                else { purchaseOrderModel.ETA_1st_Date = null; }
                if (ETA_2nd_Date_IsDisabled != true)
                { purchaseOrderModel.ETA_2nd_Date = Convert.ToString(ETA_2nd_Date); }
                else { purchaseOrderModel.ETA_2nd_Date = null; }
                if (ETA_3rd_Date_IsDisabled != true)
                { purchaseOrderModel.ETA_3rd_Date = Convert.ToString(ETA_3rd_Date); }
                else { purchaseOrderModel.ETA_3rd_Date = null; }
                if (ETA_4th_Date_IsDisabled != true)
                { purchaseOrderModel.ETA_4th_Date = Convert.ToString(ETA_4th_Date); }
                else { purchaseOrderModel.ETA_4th_Date = null; }

                if (EA_1st_Date_IsDisabled != true)
                { purchaseOrderModel.EA_WH_1st_Date = Convert.ToString(EA_1st_Date); }
                else { purchaseOrderModel.EA_WH_1st_Date = null; }
                if (EA_2nd_Date_IsDisabled != true)
                { purchaseOrderModel.EA_WH_2nd_Date = Convert.ToString(EA_2nd_Date); }
                else { purchaseOrderModel.EA_WH_2nd_Date = null; }
                if (EA_3rd_Date_IsDisabled != true)
                { purchaseOrderModel.EA_WH_3rd_Date = Convert.ToString(EA_3rd_Date); }
                else { purchaseOrderModel.EA_WH_3rd_Date = null; }
                if (EA_4th_Date_IsDisabled != true)
                { purchaseOrderModel.EA_WH_4th_Date = Convert.ToString(EA_4th_Date); }
                else { purchaseOrderModel.EA_WH_4th_Date = null; }

                if (Received_Date_IsDisabled != true)
                { purchaseOrderModel.RECEIVED_DATE =Received_Date; }
                else { purchaseOrderModel.RECEIVED_DATE = null; }
                purchaseOrderModel.GRAND_TOTAL = finaltotal;



                purchaseOrderModel.REG_BY = "ASAD";




                var data = await Http.PutJsonAsync<PurchaseOrderModel>(Utility.BaseUrl + "api/Purchase/EditPurchaseOrder", purchaseOrderModel);
                //var id = await Http.GetJsonAsync<int>(Utility.BaseUrl + "api/Purchase/GetPurchaseOrderId/" + purchaseOrderModel.PO_NUMBER_LONG_CODE);
                //foreach (var item in requestItemList)
                //{
                //    details = new PurchaseOrderDetailsEntity();
                //    details.PO_ID = id;
                //    details.PO_NUMBER_LONG_CODE = purchaseOrderModel.PO_NUMBER_LONG_CODE;
                //    details.ITEM_ID = item.ITEM_ID;
                //    details.QUANTITY = item.Quantity;
                //    details.UNIT_PRICE = item.Rate;
                //    details.PACK_SIZE = item.PACK_SIZE;
                //    details.UOM = item.UOM;


                //    purchaseDetailsList.Add(details);
                //}
                //var requisition_details = await Http.PostJsonAsync<List<PurchaseOrderDetailsEntity>>(Utility.BaseUrl + "api/Purchase/AddPurchaseOrderDetails", purchaseDetailsList);
                toastService.ShowSuccess("Update Successfully!!!");
            }
            catch (Exception ex)
            {

            }

        }
    }
    private bool IsValidation()
    {
        bool flag = false;
        if (purchaseOrderModel.PO_NUMBER_LONG_CODE == "" || purchaseOrderModel.PO_NUMBER_LONG_CODE == string.Empty || purchaseOrderModel.PO_NUMBER_LONG_CODE == null)
        {
            toastService.ShowWarning("Requisition No cannot be empty!");
            flag = true;
        }

        return flag;
    }

    //private void CreateOutputReport(DataSet reprotOutputData)
    //{
    //    PrintInformationOutputItem outputItem = new PrintInformationOutputItem();
    //    try
    //    {
    //        outputItem.dataSet = DS_OUTPUT_DATA;
    //        if (DS_OUTPUT_DATA != null && DS_OUTPUT_DATA.Tables[0].Rows.Count > 0)
    //        { _ReportService.output(OutputReportSupport.GetReportConfig(outputItem), outputItem.dataSet); }
    //        else { MessageBox.Show("", "Info"); }
    //    }
    //    catch (Exception ex)
    //    {  }

    //}
}
