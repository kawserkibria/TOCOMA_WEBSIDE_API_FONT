@page "/TreeView"
@layout CustomLayout
@inject HttpClient Http

<style>

    .tree {
        position: relative;
        background: white;
        margin-top: 20px;
        padding: 30px;
        font-family: "Roboto Mono", monospace;
        font-size: 0.85rem;
        font-weight: 400;
        line-height: 1.5;
        color: #212529;
    }

        .tree span {
            font-size: 13px;
            font-style: italic;
            letter-spacing: 0.4px;
            color: #a8a8a8;
        }

        .tree .fa-folder-open, .tree .fa-folder {
            color: #007bff;
        }

        .tree .fa-html5 {
            color: #f21f10;
        }

        .tree ul {
            padding-left: 5px;
            list-style: none;
        }

            .tree ul li {
                position: relative;
                padding-top: 5px;
                padding-bottom: 5px;
                padding-left: 15px;
                -webkit-box-sizing: border-box;
                -moz-box-sizing: border-box;
                box-sizing: border-box;
            }

                .tree ul li:before {
                    position: absolute;
                    top: 15px;
                    left: 0;
                    width: 10px;
                    height: 1px;
                    margin: auto;
                    content: "";
                    background-color: #666;
                }

                .tree ul li:after {
                    position: absolute;
                    top: 0;
                    bottom: 0;
                    left: 0;
                    width: 1px;
                    height: 100%;
                    content: "";
                    background-color: #666;
                }

                .tree ul li:last-child:after {
                    height: 15px;
                }

            .tree ul a {
                cursor: pointer;
            }

                .tree ul a:hover {
                    text-decoration: none;
                }
</style>



<div class="card">
    <div class="card-header" style="text-align:center;font-size:20px">Chart of Accounts</div>
    <div class="container">
        <div class="tree">
            <ul>
                <li>
                    <i class="fa fa-folder-open"></i> Assets                    
                </li>
                <li>
                    <i class="fa fa-folder-open"></i> Liabilities                    
                </li>
                <li>
                    <i class="fa fa-folder-open"></i> Income
                    
                </li>
                <li>
                    <i class="fa fa-folder-open"></i> Expenses                    
                </li>
            </ul>
        </div>
    </div>

</div>

@code {
    List<LG_Group> ledgerGroupList = new List<LG_Group>();
    List<string> accountHead = new List<string>();
    List<AccountsHead> parentList = new List<AccountsHead>();
    AccountsHead parent = new AccountsHead();


    protected override async Task OnInitializedAsync()
    {
        List<AccountsHead> parentList = new List<AccountsHead>
            {
                new AccountsHead { Item = "Assets" },
                new AccountsHead { Item = "Liabilities" },
                new AccountsHead { Item = "Income" },
                new AccountsHead { Item = "Expenses" }
            };


        ledgerGroupList = await Http.GetJsonAsync<List<LG_Group>>(Utility.BaseUrl + "api/Setup/GetLedgerGroup");

        foreach (var item in parentList)
        {
            foreach (var subitem in ledgerGroupList)
            {
                if(item.Item==subitem.GR_PARENT)
                    {
                        item.parentGrouplist.Add(subitem);
                    }
                
            }
        }


    }


}
