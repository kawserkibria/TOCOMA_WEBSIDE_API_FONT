@page "/JournalVoucherList"
@layout CustomLayout
@inject IToastService toastService
@inject HttpClient Http
@inject IJSRuntime JSRuntime



<div class="card">
    <div class="card-header">
        Journal List /
        <a href="JournalVoucher">New Journal</a>
    </div>
    <div class="testbox">
        <div class="tablearea">
            <table id="example" class="display" style="width:100%">
                <thead>
                    <tr>
                        <th>Ref No.</th>
                        <th>Ledger Name</th>
                        <th>Voucher Date</th>
                        <th>Month</th>
                        <th>Amount</th>
                        <th></th>
                        <th></th>
                        <th></th>
                    </tr>

                </thead>
                <tbody>
                    @if (accCompanyVoucherList != null)
                    {
                        foreach (var item in accCompanyVoucherList)
                        {
                    <tr>
                        <td>@item.COMP_REF_NO</td>
                        <td>@item.LEDGER_NAME</td>
                        <td>@item.COMP_VOUCHER_DATE.Day/@item.COMP_VOUCHER_DATE.Month/@item.COMP_VOUCHER_DATE.Year</td>
                        <td>@item.COMP_VOUCHER_MONTH_ID</td>
                        <td>@item.COMP_VOUCHER_NET_AMOUNT</td>
                        <td style="text-align:center;width:6%"><a href="EditJournalVoucher/@item.COMP_REF_NO"><span class="oi oi-pencil"></span></a></td>
                        <td style="text-align:center;width:6%"><a @onclick=@(() => DeletePayment(item.COMP_REF_NO))><span style="color:red" class="oi oi-trash"></span></a></td>
                        <td style="text-align:center;width:6%"><a @onclick=@(() => PaymentViewReport(item.COMP_REF_NO)) style="cursor:pointer;color:Highlight">View</a></td>
                    </tr>
                        }
                    }
                </tbody>
            </table>
        </div>

    </div>
</div>


<form action="RDLCReport/GetPaymentReport" target="_blank" method="post" style="display:none">
    <button type="submit" id="submitbutton"></button>
</form>

@code {
    List<ACC_COMPANY_VOUCHER_MODEL> accCompanyVoucherList = new List<ACC_COMPANY_VOUCHER_MODEL>();
    string btnLabel;
    int Journal_Voucher_Type = 3;
    List<ACC_VOUCHER_MODEL> voucher = new List<ACC_VOUCHER_MODEL>();
    protected override async Task OnInitializedAsync()
    {
        btnLabel = "Save";
        await GetVoucherList();
        StateHasChanged();
        await JSRuntime.InvokeAsync<object>("TestDataTablesAdd", "#example");

    }
    private async Task GetVoucherList()
    {
        accCompanyVoucherList = await Http.GetJsonAsync<List<ACC_COMPANY_VOUCHER_MODEL>>(Utility.BaseUrl + "api/Transection/GetVoucherList/" + Journal_Voucher_Type);
    }


    private void EditClick(int Code)
    {
        btnLabel = "Update";
        //branch = branchList.FirstOrDefault(x => x.BRANCH_ID == branchCode);
    }
    private async Task DeletePayment(string Code)
    {
        if (!await JSRuntime.InvokeAsync<bool>("confirm", $"Are you sure you want to delete ?"))
            return;

        ACC_COMPANY_VOUCHER_MODEL vouchermodel = new ACC_COMPANY_VOUCHER_MODEL();
        vouchermodel.COMP_REF_NO = Code;
        vouchermodel.COMP_VOUCHER_TYPE = 3;
        await Http.PostJsonAsync(Utility.BaseUrl + "api/Transection/DeletePaymentByRefNo", vouchermodel);
        await GetVoucherList();
    }
    public async Task PaymentViewReport(string REFNO)
    {
        voucher = new List<ACC_VOUCHER_MODEL>();
        voucher = await Http.GetJsonAsync<List<ACC_VOUCHER_MODEL>>(Utility.BaseUrl + "api/Transection/GetACCVoucherByRefNo/" + REFNO);
        SessionData.paymentDataList = voucher;
        int type = 3;
        await JSRuntime.InvokeAsync<object>("open", "api/RDLCReport/GetPaymentReport/" + REFNO + "/" + type, "_blank");
        //var postBody = new { Title = "Blazor POST Request Example" };
        //using var response = await Http.PostJsonAsync("https://reqres.in/invalid-url", postBody);
        //var request = new HttpRequestMessage(HttpMethod.Post, "RDLCReport/GetPaymentReport");
        //accCompanyVoucherModel = await Http.GetJsonAsync<ACC_COMPANY_VOUCHER_MODEL>(Utility.BaseUrl + "api/Transection/GetPaymentVoucherByRefNo/" + REFNO);
        //voucher = new List<ACC_VOUCHER_MODEL>();
        //voucher = await Http.GetJsonAsync<List<ACC_VOUCHER_MODEL>>(Utility.BaseUrl + "api/Transection/GetACCVoucherByRefNo/" + REFNO);
        //SessionData.paymentDataList = new List<ACC_VOUCHER_MODEL>();
        //href = "http://localhost:7558/api/RDLCReport/GetPaymentReport/@item.COMP_REF_NO"
        //SessionData.paymentDataList = voucher;
        //navManager.NavigateTo("api/RDLCReport/GetPaymentReport/");
    }
}