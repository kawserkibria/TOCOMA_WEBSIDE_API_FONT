// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace TOCOMA_ERP_System.Pages.Accounce.Master
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using TOCOMA_ERP_System;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using TOCOMA_ERP_System.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using TOCOMA_ERP_ClassLibrary.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Blazored.Toast;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using TOCOMA_ERP_System.Controller;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.AspNetCore.ProtectedBrowserStorage;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using TOCOMA_ERP_System.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.AspNetCore.Hosting;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.LayoutAttribute(typeof(CustomLayout))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/LadgerGroup")]
    public partial class LadgerGroup : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 145 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\Pages\Accounce\Master\LadgerGroup.razor"
       
    LedgerGroupModel ledgerGroup = new LedgerGroupModel();
    List<LedgerGroupModel> ledgerGroupList = new List<LedgerGroupModel>();
    List<BranchModel> branchList = new List<BranchModel>();
    List<PrimaryModel> primaryList = new List<PrimaryModel>();
    List<ParentModel> parentList = new List<ParentModel>();
    string btnLabel;
    private ElementReference myref;
    int cashflow_visible_Status = 0;
    string message = "";

    protected override async Task OnInitializedAsync()
    {
        btnLabel = "Save";
        ledgerGroupList = await Http.GetJsonAsync<List<LedgerGroupModel>>(Utility.BaseUrl + "api/Setup/GetLedgerGroup");
        primaryList = await Http.GetJsonAsync<List<PrimaryModel>>(Utility.BaseUrl + "api/Setup/GetPrimaryList");
        await GetLedgerGroup();
        StateHasChanged();
        await JSRuntime.InvokeAsync<object>("TestDataTablesAdd", "#example");
        //await GetLedgerGroup();
    }
    public async Task GetLedgerGroup()
    {
        ledgerGroupList = await Http.GetJsonAsync<List<LedgerGroupModel>>(Utility.BaseUrl + "api/Setup/GetLedgerGroup");
        //primaryList = await Http.GetJsonAsync<List<PrimaryModel>>(Utility.BaseUrl + "api/Setup/GetPrimaryList");

    }

    public async Task SaveGroups()
    {
        //if (IsValidation() != true)
        //{
        try
        {
            if (btnLabel == "Save")
            {
                //ledgerGroup.GR_PARENT = ledgerGroup.GR_NAME;
                if (ledgerGroup.GR_PARENT == null)
                { ledgerGroup.GR_PARENT = "Primary"; }
                ledgerGroup.ENTRYBY = "Asad";
                if (ledgerGroup.GR_CASH_FLOW_TYPE == "Operating Activities")
                { ledgerGroup.GR_CASH_FLOW_TYPE = "1"; }
                else if (ledgerGroup.GR_CASH_FLOW_TYPE == "Investing Activities")
                { ledgerGroup.GR_CASH_FLOW_TYPE = "2"; }
                else if (ledgerGroup.GR_CASH_FLOW_TYPE == "Financing Activities")
                { ledgerGroup.GR_CASH_FLOW_TYPE = "3"; }
                else if (ledgerGroup.GR_CASH_FLOW_TYPE == "End Of List")
                { ledgerGroup.GR_CASH_FLOW_TYPE = "4"; }
                else { ledgerGroup.GR_CASH_FLOW_TYPE = "4"; }

                var data = await Http.PostJsonAsync<LedgerGroupModel>(Utility.BaseUrl + "api/Setup/AddLedgerGroup", ledgerGroup);
                if(data.Success_Status==true)
                { toastService.ShowSuccess("Save Successfully!!"); }
                else { toastService.ShowError("Not Save"); }

                //message = "Save Successfully!!!";

            }
            else if (btnLabel == "Update")
            {
                ledgerGroup.UPDATEBY = "Asad";
                if (ledgerGroup.GR_PARENT == null)
                { ledgerGroup.GR_PARENT = "Primary"; }
                if (ledgerGroup.GR_CASH_FLOW_TYPE == "Operating Activities")
                { ledgerGroup.GR_CASH_FLOW_TYPE = "1"; }
                else if (ledgerGroup.GR_CASH_FLOW_TYPE == "Investing Activities")
                { ledgerGroup.GR_CASH_FLOW_TYPE = "2"; }
                else if (ledgerGroup.GR_CASH_FLOW_TYPE == "Financing Activities")
                { ledgerGroup.GR_CASH_FLOW_TYPE = "3"; }
                else if (ledgerGroup.GR_CASH_FLOW_TYPE == "End Of List")
                { ledgerGroup.GR_CASH_FLOW_TYPE = "4"; }
                else { ledgerGroup.GR_CASH_FLOW_TYPE = "4"; }
                var data = await Http.PutJsonAsync<LedgerGroupModel>(Utility.BaseUrl + "api/Setup/UpdateLedgerGroup", ledgerGroup);
                //toastService.ShowSuccess("Update Successfully!!!");
                if (data.Success_Status == true)
                { toastService.ShowSuccess("Updated Successfully!!"); }
                else { toastService.ShowError("Not Updated"); }
                //message = "Update Successfully!!!";

                //message = "";
            }

        }
        catch (Exception ex)
        {

        }
        await GetLedgerGroup();
        //}
    }
    private bool IsValidation()
    {
        bool flag = false;
        if (ledgerGroup.GR_NAME == "" || ledgerGroup.GR_NAME == string.Empty || ledgerGroup.GR_NAME == null)
        {
            toastService.ShowWarning("Branch Name cannot be empty!");
            flag = true;
        }
        return flag;
    }
    private async Task UnderClicked(ChangeEventArgs change)
    {
        ledgerGroup.GR_PARENT = change.Value.ToString();
    }
    private void NewClick()
    {
        ledgerGroup = new LedgerGroupModel();
        btnLabel = "Save";
        message = "";
    }
    private async void EditClick(int code)
    {
        btnLabel = "Update";
        message = "";
        ledgerGroup = ledgerGroupList.FirstOrDefault(x => x.GR_SERIAL == code);
        if (ledgerGroup.GR_LEVEL == 1)
        {
            ledgerGroup.GR_PARENT = "Primary";
        }
        if (ledgerGroup.GR_PRIMARY_TYPE == 1)
        {
            ledgerGroup.GR_PRIMARY = "Assets";
        }
        else if (ledgerGroup.GR_PRIMARY_TYPE == 2)
        {
            ledgerGroup.GR_PRIMARY = "Equity And Liabilities";
        }
        else if (ledgerGroup.GR_PRIMARY_TYPE == 3)
        {
            ledgerGroup.GR_PRIMARY = "Income";
        }
        else if (ledgerGroup.GR_PRIMARY_TYPE == 4)
        {
            ledgerGroup.GR_PRIMARY = "Expenses";
        }

        if (ledgerGroup.GR_CASH_FLOW_TYPE == "1")
        {
            ledgerGroup.GR_CASH_FLOW_TYPE = "Operating Activities";
        }
        else if (ledgerGroup.GR_CASH_FLOW_TYPE == "2")
        {
            ledgerGroup.GR_CASH_FLOW_TYPE = "Investing Activities";
        }
        else if (ledgerGroup.GR_CASH_FLOW_TYPE == "3")
        {
            ledgerGroup.GR_CASH_FLOW_TYPE = "Financing Activities";
        }
        else if (ledgerGroup.GR_CASH_FLOW_TYPE == "4")
        {
            ledgerGroup.GR_CASH_FLOW_TYPE = "End Of List";
        }
        await myref.FocusAsync();
    }
    private async Task DeleteClick(int serial)
    {
        if (!await JSRuntime.InvokeAsync<bool>("confirm", $"Are you sure you want to delete ?"))
            return;
        bool isExist = await Http.GetJsonAsync<bool>(Utility.BaseUrl + "api/Setup/GetLedgerGroupByGRName/" + serial);
        if (isExist != true)
        { await Http.DeleteAsync(Utility.BaseUrl + "api/Setup/DeleteLedgerGroup/" + serial); }
        else { toastService.ShowWarning("Default Group could not be deleted."); }
        await GetLedgerGroup();

    }
    async void CashFlow_ChequeClicked(object checkedValue)
    {
        if ((bool)checkedValue)
        {
            cashflow_visible_Status = 1;
        }
        else
        {
            cashflow_visible_Status = 0;
        }
        StateHasChanged();
    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JSRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IToastService toastService { get; set; }
    }
}
#pragma warning restore 1591
