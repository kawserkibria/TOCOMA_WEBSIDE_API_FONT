// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace TOCOMA_ERP_System.Pages.Purchase
{
    #line hidden
    using System;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using TOCOMA_ERP_System;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using TOCOMA_ERP_System.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using TOCOMA_ERP_ClassLibrary.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Blazored.Toast;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using TOCOMA_ERP_System.Controller;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.AspNetCore.ProtectedBrowserStorage;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using TOCOMA_ERP_System.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\_Imports.razor"
using Microsoft.AspNetCore.Hosting;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\Pages\Purchase\UpdatePurchaseOrder_bkp.razor"
using System.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\Pages\Purchase\UpdatePurchaseOrder_bkp.razor"
using System.IO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\Pages\Purchase\UpdatePurchaseOrder_bkp.razor"
using System.Collections.Generic;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\Pages\Purchase\UpdatePurchaseOrder_bkp.razor"
using System.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\Pages\Purchase\UpdatePurchaseOrder_bkp.razor"
using System.Reflection;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.LayoutAttribute(typeof(CustomLayout))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/UpdatePurchaseOrder_bkp/{po_number}")]
    public partial class UpdatePurchaseOrder_bkp : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 426 "F:\Project\Company All Project\TocomaERP\Project\TOCOMA\TOCOMA_ERP_System\TOCOMA_ERP_System\Pages\Purchase\UpdatePurchaseOrder_bkp.razor"
       
    [Parameter]
    public string po_number { get; set; }
    //private ReportService _ReportService = new ReportService();
    DataSet DS_OUTPUT_DATA = new DataSet();
    List<ItemEntity> productList = new List<ItemEntity>();
    PurchaseOrderEntity purchaseOrder = new PurchaseOrderEntity();

    PurchaseOrderModel purchaseOrderModel = new PurchaseOrderModel();
    //Purch purchaseorderview = new PurchaseOrderViewModel();
    List<VendorEntity> vendorList = new List<VendorEntity>();
    PRE pp = new PRE();
    List<OrderItemEntity> requestItemList = new List<OrderItemEntity>();
    POModel poModel = new POModel();
    //DateTime po_date = System.DateTime.Now;
    string po_date;
    //DateTime quotation_ref_date = System.DateTime.Now;
    string quotation_ref_date = "";
    DateTime ETD_1st_Date = System.DateTime.Now;
    DateTime ETD_2nd_Date = System.DateTime.Now;
    DateTime ETD_3rd_Date = System.DateTime.Now;
    DateTime ETD_4th_Date = System.DateTime.Now;

    DateTime ETA_1st_Date = System.DateTime.Now;
    DateTime ETA_2nd_Date = System.DateTime.Now;
    DateTime ETA_3rd_Date = System.DateTime.Now;
    DateTime ETA_4th_Date = System.DateTime.Now;

    DateTime EA_1st_Date = System.DateTime.Now;
    DateTime EA_2nd_Date = System.DateTime.Now;
    DateTime EA_3rd_Date = System.DateTime.Now;
    DateTime EA_4th_Date = System.DateTime.Now;

    DateTime Received_Date = System.DateTime.Now;
    //PurchaseOrderViewModel purchaseOrderViewModel = new PurchaseOrderViewModel();
    PurchaseOrderDetailsEntity details = new PurchaseOrderDetailsEntity();
    List<PurchaseOrderDetailsEntity> purchaseDetailsList = new List<PurchaseOrderDetailsEntity>();
    protected bool ETD_1st_Date_IsDisabled { get; set; }
    protected bool ETD_2nd_Date_IsDisabled { get; set; }
    protected bool ETD_3rd_Date_IsDisabled { get; set; }
    protected bool ETD_4th_Date_IsDisabled { get; set; }

    protected bool ETD_1st_Date_CheckStatus { get; set; }
    protected bool ETD_2nd_Date_CheckStatus { get; set; }
    protected bool ETD_3rd_Date_CheckStatus { get; set; }
    protected bool ETD_4th_Date_CheckStatus { get; set; }

    //----------------------

    protected bool ETA_1st_Date_IsDisabled { get; set; }
    protected bool ETA_2nd_Date_IsDisabled { get; set; }
    protected bool ETA_3rd_Date_IsDisabled { get; set; }
    protected bool ETA_4th_Date_IsDisabled { get; set; }

    protected bool ETA_1st_Date_CheckStatus { get; set; }
    protected bool ETA_2nd_Date_CheckStatus { get; set; }
    protected bool ETA_3rd_Date_CheckStatus { get; set; }
    protected bool ETA_4th_Date_CheckStatus { get; set; }

    //----------------

    protected bool EA_1st_Date_IsDisabled { get; set; }
    protected bool EA_2nd_Date_IsDisabled { get; set; }
    protected bool EA_3rd_Date_IsDisabled { get; set; }
    protected bool EA_4th_Date_IsDisabled { get; set; }

    protected bool EA_1st_Date_CheckStatus { get; set; }
    protected bool EA_2nd_Date_CheckStatus { get; set; }
    protected bool EA_3rd_Date_CheckStatus { get; set; }
    protected bool EA_4th_Date_CheckStatus { get; set; }

    protected bool Received_Date_IsDisabled { get; set; }
    protected bool Received_Date_CheckStatus { get; set; }


    double total = 0;
    double finaltotal = 0;
    double ITEMtotal = 0;
    double AIT;
    double VAT;
    double ADJ;
    double SeaFreight;
    double GRAND_TOTAL = 0;

    //protected bool IsDisabled { get; set; }




    //[Parameter]
    //public string Format { get; set; } = "dd/mm/yyyy";




    protected override async Task OnInitializedAsync()
    {
        date_disabled();
        purchaseOrderModel = await Http.GetJsonAsync<PurchaseOrderModel>(Utility.BaseUrl + "api/Purchase/GetPurchaseOrderByPO/" + po_number);
        purchaseDetailsList = await Http.GetJsonAsync<List<PurchaseOrderDetailsEntity>>(Utility.BaseUrl + "api/Purchase/GetPurchaseOrderDetailsByPO_NO/" + po_number);
        vendorList = await Http.GetJsonAsync<List<VendorEntity>>(Utility.BaseUrl + "api/Vendor");
        GetData();
        GetTotal();
    }
    private void GetData()
    {

        //purchaseOrderModel.PO_NUMBER_LONG_CODE = purchaseorderview.PO_NUMBER_LONG_CODE;
        po_date = Convert.ToString(purchaseOrderModel.PO_DATE);
        quotation_ref_date = purchaseOrderModel.QUOTATION_REFERANCE_DATE;
        if (purchaseOrderModel.ETD_1st_Date != null)
        {
            ETD_1st_Date_IsDisabled = false;
            ETD_1st_Date_CheckStatus = true;
            ETD_1st_Date = Convert.ToDateTime(purchaseOrderModel.ETD_1st_Date);
        }
        if (purchaseOrderModel.ETD_2nd_Date != null)
        {
            ETD_2nd_Date_IsDisabled = false;
            ETD_2nd_Date_CheckStatus = true;
            ETD_2nd_Date = Convert.ToDateTime(purchaseOrderModel.ETD_2nd_Date);
        }
        if (purchaseOrderModel.ETD_3rd_Date != null)
        {
            ETD_3rd_Date_IsDisabled = false;
            ETD_3rd_Date_CheckStatus = true;
            ETD_3rd_Date = Convert.ToDateTime(purchaseOrderModel.ETD_3rd_Date);
        }
        if (purchaseOrderModel.ETD_4th_Date != null)
        {
            ETD_4th_Date_IsDisabled = false;
            ETD_4th_Date_CheckStatus = true;
            ETD_4th_Date = Convert.ToDateTime(purchaseOrderModel.ETD_4th_Date);
        }
        //--------------------------- ETD Date End
        if (purchaseOrderModel.ETA_1st_Date != null)
        {
            ETA_1st_Date_IsDisabled = false;
            ETA_1st_Date_CheckStatus = true;
            ETA_1st_Date = Convert.ToDateTime(purchaseOrderModel.ETA_1st_Date);
        }
        if (purchaseOrderModel.ETA_2nd_Date != null)
        {
            ETA_2nd_Date_IsDisabled = false;
            ETA_2nd_Date_CheckStatus = true;
            ETA_2nd_Date = Convert.ToDateTime(purchaseOrderModel.ETA_2nd_Date);
        }
        if (purchaseOrderModel.ETA_3rd_Date != null)
        {
            ETA_3rd_Date_IsDisabled = false;
            ETA_3rd_Date_CheckStatus = true;
            ETA_3rd_Date = Convert.ToDateTime(purchaseOrderModel.ETA_3rd_Date);
        }
        if (purchaseOrderModel.ETA_4th_Date != null)
        {
            ETA_4th_Date_IsDisabled = false;
            ETA_4th_Date_CheckStatus = true;
            ETA_4th_Date = Convert.ToDateTime(purchaseOrderModel.ETA_4th_Date);
        }
        //-----------ETA Date End

        if (purchaseOrderModel.EA_WH_1st_Date != null)
        {
            EA_1st_Date_IsDisabled = false;
            EA_1st_Date_CheckStatus = true;
            EA_1st_Date = Convert.ToDateTime(purchaseOrderModel.EA_WH_1st_Date);
        }
        if (purchaseOrderModel.EA_WH_2nd_Date != null)
        {
            EA_2nd_Date_IsDisabled = false;
            EA_2nd_Date_CheckStatus = true;
            EA_2nd_Date = Convert.ToDateTime(purchaseOrderModel.EA_WH_2nd_Date);
        }
        if (purchaseOrderModel.EA_WH_3rd_Date != null)
        {
            EA_3rd_Date_IsDisabled = false;
            EA_3rd_Date_CheckStatus = true;
            EA_3rd_Date = Convert.ToDateTime(purchaseOrderModel.EA_WH_3rd_Date);
        }
        if (purchaseOrderModel.EA_WH_4th_Date != null)
        {
            EA_4th_Date_IsDisabled = false;
            EA_4th_Date_CheckStatus = true;
            EA_4th_Date = Convert.ToDateTime(purchaseOrderModel.EA_WH_4th_Date);
        }
        //------EA Date End

        if(purchaseOrderModel.RECEIVED_DATE!=null)
        {
            Received_Date_IsDisabled = false;
            Received_Date_CheckStatus = true;
            Received_Date = Convert.ToDateTime(purchaseOrderModel.RECEIVED_DATE);
        }

    }
    protected void date_disabled()
    {
        ETD_1st_Date_IsDisabled = true;
        ETD_2nd_Date_IsDisabled = true;
        ETD_3rd_Date_IsDisabled = true;
        ETD_4th_Date_IsDisabled = true;

        ETA_1st_Date_IsDisabled = true;
        ETA_2nd_Date_IsDisabled = true;
        ETA_3rd_Date_IsDisabled = true;
        ETA_4th_Date_IsDisabled = true;

        EA_1st_Date_IsDisabled = true;
        EA_2nd_Date_IsDisabled = true;
        EA_3rd_Date_IsDisabled = true;
        EA_4th_Date_IsDisabled = true;
        Received_Date_IsDisabled = true;
    }
    async void ETD_1st_Date_CheckboxClicked(object checkedValue)
    {
        if ((bool)checkedValue)
        { ETD_1st_Date_IsDisabled = false; }
        else
        { ETD_1st_Date_IsDisabled = true; }
    }
    async void ETD_2nd_Date_CheckboxClicked(object checkedValue)
    {
        if ((bool)checkedValue)
        { ETD_2nd_Date_IsDisabled = false; }
        else
        { ETD_2nd_Date_IsDisabled = true; }
    }
    async void ETD_3rd_Date_CheckboxClicked(object checkedValue)
    {
        if ((bool)checkedValue)
        { ETD_3rd_Date_IsDisabled = false; }
        else
        { ETD_3rd_Date_IsDisabled = true; }
    }
    async void ETD_4th_Date_CheckboxClicked(object checkedValue)
    {
        if ((bool)checkedValue)
        { ETD_4th_Date_IsDisabled = false; }
        else
        { ETD_4th_Date_IsDisabled = true; }
    }
    async void ETA_1st_Date_CheckboxClicked(object checkedValue)
    {
        if ((bool)checkedValue)
        { ETA_1st_Date_IsDisabled = false; }
        else
        { ETA_1st_Date_IsDisabled = true; }
    }
    async void ETA_2nd_Date_CheckboxClicked(object checkedValue)
    {
        if ((bool)checkedValue)
        { ETA_2nd_Date_IsDisabled = false; }
        else
        { ETA_2nd_Date_IsDisabled = true; }
    }
    async void ETA_3rd_Date_CheckboxClicked(object checkedValue)
    {
        if ((bool)checkedValue)
        { ETA_3rd_Date_IsDisabled = false; }
        else
        { ETA_3rd_Date_IsDisabled = true; }
    }
    async void ETA_4th_Date_CheckboxClicked(object checkedValue)
    {
        if ((bool)checkedValue)
        { ETA_4th_Date_IsDisabled = false; }
        else
        { ETA_4th_Date_IsDisabled = true; }
    }
    async void EA_1st_Date_CheckboxClicked(object checkedValue)
    {
        if ((bool)checkedValue)
        { EA_1st_Date_IsDisabled = false; }
        else
        { EA_1st_Date_IsDisabled = true; }
    }
    async void EA_2nd_Date_CheckboxClicked(object checkedValue)
    {
        if ((bool)checkedValue)
        { EA_2nd_Date_IsDisabled = false; }
        else
        { EA_2nd_Date_IsDisabled = true; }
    }
    async void EA_3rd_Date_CheckboxClicked(object checkedValue)
    {
        if ((bool)checkedValue)
        { EA_3rd_Date_IsDisabled = false; }
        else
        { EA_3rd_Date_IsDisabled = true; }
    }
    async void EA_4th_Date_CheckboxClicked(object checkedValue)
    {
        if ((bool)checkedValue)
        { EA_4th_Date_IsDisabled = false; }
        else
        { EA_4th_Date_IsDisabled = true; }
    }
    async void Received_Date_CheckboxClicked(object checkedValue)
    {
        if ((bool)checkedValue)
        { Received_Date_IsDisabled = false; }
        else
        { Received_Date_IsDisabled = true; }
    }

    private void AIT_Clicked(ChangeEventArgs changeEventArgs)
    {
        //double sum= requestItemList.Sum(x => Convert.ToDouble(x.Quantity) * Convert.ToDouble(x.Rate));
        //if (changeEventArgs.Value.ToString() != "") { finaltotal = finaltotal + Convert.ToDouble(changeEventArgs.Value.ToString()); }
        //else { finaltotal = finaltotal + 0; }

        if (changeEventArgs.Value.ToString() != "") { AIT = Convert.ToDouble(changeEventArgs.Value.ToString()); }
        else { AIT = 0; }
        //AIT = Convert.ToDouble(changeEventArgs.Value.ToString());
        GetTotal();
    }
    private void VAT_Clicked(ChangeEventArgs changeEventArgs)
    {
        //double sum = requestItemList.Sum(x => Convert.ToDouble(x.Quantity) * Convert.ToDouble(x.Rate));
        //finaltotal = finaltotal + Convert.ToDouble(changeEventArgs.Value.ToString());
        //VAT= Convert.ToDouble(changeEventArgs.Value.ToString());
        if (changeEventArgs.Value.ToString() != "") { VAT = Convert.ToDouble(changeEventArgs.Value.ToString()); }
        else { VAT = 0; }
        GetTotal();
    }
    private void ADJ_Clicked(ChangeEventArgs changeEventArgs)
    {
        //double sum = requestItemList.Sum(x => Convert.ToDouble(x.Quantity) * Convert.ToDouble(x.Rate));
        //finaltotal = finaltotal + Convert.ToDouble(changeEventArgs.Value.ToString());
        if (changeEventArgs.Value.ToString() != "") { ADJ = Convert.ToDouble(changeEventArgs.Value.ToString()); }
        else { ADJ = 0; }
        GetTotal();
        //ADJ = Convert.ToDouble(changeEventArgs.Value.ToString());
    }
    private void Sea_Freight_Clicked(ChangeEventArgs changeEventArgs)
    {
        if (changeEventArgs.Value.ToString() != "") { SeaFreight = Convert.ToDouble(changeEventArgs.Value.ToString()); }
        else { SeaFreight = 0; }
        GetTotal();
    }
    private void GetTotal()
    {
        finaltotal = purchaseDetailsList.Sum(x => Convert.ToDouble(x.QUANTITY) * Convert.ToDouble(x.UNIT_PRICE));

        if (AIT != 0)
        { finaltotal = finaltotal + AIT; }
        if (VAT != 0)
        { finaltotal = finaltotal + VAT; }
        if (ADJ != 0)
        { finaltotal = finaltotal + ADJ; }
        if (SeaFreight != 0)
        { finaltotal = finaltotal + SeaFreight; }

    }
    public class ListtoDataTable
    {
        public DataTable ToDataTable<T>(List<T> items)
        {
            DataTable dataTable = new DataTable(typeof(T).Name);
            //Get all the properties by using reflection
            PropertyInfo[] Props = typeof(T).GetProperties(BindingFlags.Public | BindingFlags.Instance);
            foreach (PropertyInfo prop in Props)
            {
                //Setting column names as Property names
                dataTable.Columns.Add(prop.Name);
            }
            foreach (T item in items)
            {
                var values = new object[Props.Length];
                for (int i = 0; i < Props.Length; i++)
                {

                    values[i] = Props[i].GetValue(item, null);
                }
                dataTable.Rows.Add(values);
            }

            return dataTable;
        }
    }


    private async Task CreatePurchaseOrder()
    {

        pp.REQUISITION_NO = "1234";
        pp.REQUESTED_BY = "Asad";
        //var datea=await Http.PostJsonAsync<PurchaseOrderEntity>("https://localhost:44350/Report/CreateReport", purchaseOrder);
        //await _http.PostJsonAsync<UnitEntity>("api/units", unit);
        await Http.PostJsonAsync("https://localhost:44350/Report/CreateReport", purchaseOrder);
        //await Http.PostJsonAsync<PRE>(Utility.BaseUrl + "api/Purchase/GenerateReport/", pp);


        //int report_no = 1;
        //SALES_FROM_TO = "";
        //SALES_FROM_TO = DT_SALES_FROM.Text + "  to  " + DT_SALES_TO.Text;
        //string SEARCH_CONDITION = "";
        //SEARCH_CONDITION = GetSearchConditionForSales();
        //SearchReport1CustomerList(report_no, SEARCH_CONDITION);
        //CreateOutputReport(DS_OUTPUT_DATA);

        //PrintInformationOutputItem outputItem = new PrintInformationOutputItem();
        //try
        //{
        //    productList = await Http.GetJsonAsync<List<ItemEntity>>(Utility.BaseUrl + "api/Product");
        //    DataTable DS = new DataTable();
        //    ListtoDataTable lsttodt = new ListtoDataTable();
        //    DataTable dt = lsttodt.ToDataTable(productList);
        //    DataTable dt1 = new DataTable();
        //    dt1.Columns.Add(new DataColumn("1", typeof(string)));
        //    //dt1.Rows[0].ItemArray[0] = 1;
        //    DS_OUTPUT_DATA.Tables.Add(dt);
        //    DS_OUTPUT_DATA.Tables.Add(dt1);
        //    //foreach (var items in productList)
        //    //{

        //    //    DS.Columns.Add(items.ITEM_CODE);
        //    //    DS.Columns.Add(items.ITEM_NAME);
        //    //    DS.Columns.Add(Convert.ToString(items.ITEM_RATE));



        //    //    //DS_OUTPUT_DATA.Tables.Add(items.ITEM_CODE);
        //    //    //DS_OUTPUT_DATA.Tables.Add(items.ITEM_NAME);
        //    //    //DS_OUTPUT_DATA.Tables.Add(Convert.ToString(items.ITEM_RATE));
        //    //    //DS_OUTPUT_DATA.Tables.Add(Convert.ToString("1"));

        //    //}
        //    //DS_OUTPUT_DATA = DS;

        //    outputItem.dataSet = DS_OUTPUT_DATA;
        //    if (DS_OUTPUT_DATA != null && DS_OUTPUT_DATA.Tables[0].Rows.Count > 0)
        //    { _ReportService.output(OutputReportSupport.GetReportConfig(outputItem), outputItem.dataSet); }
        //    else { }
        //}
        //catch (Exception ex)
        //{ }
        //_ReportService.output(OutputReportSupport.GetReportConfig(outputItem), outputItem.dataSet);
        //webCellReport1.FileName = "Purchase_Report";
        //webCellReport1.Report.Start();
        //webCellReport1.Report.File();
        //webCellReport1.Page.Start("Purchase", "1");

        //webCellReport1.Page.End();
        //webCellReport1.Report.End();
        //MemoryStream memoryStream = new MemoryStream();
        //webCellReport1.Report.SaveAs(memoryStream);
        //contentType = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";
        //fileName = "authors.xlsx";
        //Response.Clear();
        //Response.ContentType = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";
        //Response.AddHeader("content-disposition", "attachment; filename=" + "ABC" + ".xlsx");
        //Response.BinaryWrite(memoryStream.ToArray());
        //memoryStream.Close();
        //Response.End();


    }
    private async void CheckboxClicked(string vendor_Id, object checkedValue)
    {
        if ((bool)checkedValue)
        {
            purchaseOrderModel.VENDOR_ID = Convert.ToInt32(vendor_Id);
        }
    }
    public async Task SavePurchaseOrder()
    {

        if (IsValidation() != true)
        {
            try
            {
                //purchaseRequisition.REQUEST_DATE = request_date;
                //purchaseRequisition.REQUIRED_DATE = require_date;
                //purchaseRequisition.REQUISITION_TOTAL = requisitionTotal;
                //purchaseRequisition.STATUS = "Open";
                //purchaseRequisition.REG_BY = "Asad";
                
                //DateTime oDate = Convert.ToDateTime(po_date);
                purchaseOrderModel.PO_DATE = po_date;
                purchaseOrderModel.QUOTATION_REFERANCE_DATE = quotation_ref_date;
                purchaseOrderModel.REG_BY = "Asad";
                purchaseOrderModel.CONSIGNEE_ID = 1;
                if (ETD_1st_Date_IsDisabled != true)
                { purchaseOrderModel.ETD_1st_Date = Convert.ToString(ETD_1st_Date); }
                else { purchaseOrderModel.ETD_1st_Date = null; }
                if (ETD_2nd_Date_IsDisabled != true)
                { purchaseOrderModel.ETD_2nd_Date = Convert.ToString(ETD_2nd_Date); }
                else { purchaseOrderModel.ETD_2nd_Date = null; }
                if (ETD_3rd_Date_IsDisabled != true)
                { purchaseOrderModel.ETD_3rd_Date = Convert.ToString(ETD_3rd_Date); }
                else { purchaseOrderModel.ETD_3rd_Date = null; }
                if (ETD_4th_Date_IsDisabled != true)
                { purchaseOrderModel.ETD_4th_Date = Convert.ToString(ETD_4th_Date); }
                else { purchaseOrderModel.ETD_4th_Date = null; }

                if (ETA_1st_Date_IsDisabled != true)
                { purchaseOrderModel.ETA_1st_Date = Convert.ToString(ETA_1st_Date); }
                else { purchaseOrderModel.ETA_1st_Date = null; }
                if (ETA_2nd_Date_IsDisabled != true)
                { purchaseOrderModel.ETA_2nd_Date = Convert.ToString(ETA_2nd_Date); }
                else { purchaseOrderModel.ETA_2nd_Date = null; }
                if (ETA_3rd_Date_IsDisabled != true)
                { purchaseOrderModel.ETA_3rd_Date = Convert.ToString(ETA_3rd_Date); }
                else { purchaseOrderModel.ETA_3rd_Date = null; }
                if (ETA_4th_Date_IsDisabled != true)
                { purchaseOrderModel.ETA_4th_Date = Convert.ToString(ETA_4th_Date); }
                else { purchaseOrderModel.ETA_4th_Date = null; }

                if (EA_1st_Date_IsDisabled != true)
                { purchaseOrderModel.EA_WH_1st_Date = Convert.ToString(EA_1st_Date); }
                else { purchaseOrderModel.EA_WH_1st_Date = null; }
                if (EA_2nd_Date_IsDisabled != true)
                { purchaseOrderModel.EA_WH_2nd_Date = Convert.ToString(EA_2nd_Date); }
                else { purchaseOrderModel.EA_WH_2nd_Date = null; }
                if (EA_3rd_Date_IsDisabled != true)
                { purchaseOrderModel.EA_WH_3rd_Date = Convert.ToString(EA_3rd_Date); }
                else { purchaseOrderModel.EA_WH_3rd_Date = null; }
                if (EA_4th_Date_IsDisabled != true)
                { purchaseOrderModel.EA_WH_4th_Date = Convert.ToString(EA_4th_Date); }
                else { purchaseOrderModel.EA_WH_4th_Date = null; }

                if (Received_Date_IsDisabled != true)
                { purchaseOrderModel.RECEIVED_DATE =Received_Date; }
                else { purchaseOrderModel.RECEIVED_DATE = null; }
                purchaseOrderModel.GRAND_TOTAL = finaltotal;



                purchaseOrderModel.REG_BY = "ASAD";




                var data = await Http.PutJsonAsync<PurchaseOrderModel>(Utility.BaseUrl + "api/Purchase/EditPurchaseOrder", purchaseOrderModel);
                //var id = await Http.GetJsonAsync<int>(Utility.BaseUrl + "api/Purchase/GetPurchaseOrderId/" + purchaseOrderModel.PO_NUMBER_LONG_CODE);
                //foreach (var item in requestItemList)
                //{
                //    details = new PurchaseOrderDetailsEntity();
                //    details.PO_ID = id;
                //    details.PO_NUMBER_LONG_CODE = purchaseOrderModel.PO_NUMBER_LONG_CODE;
                //    details.ITEM_ID = item.ITEM_ID;
                //    details.QUANTITY = item.Quantity;
                //    details.UNIT_PRICE = item.Rate;
                //    details.PACK_SIZE = item.PACK_SIZE;
                //    details.UOM = item.UOM;


                //    purchaseDetailsList.Add(details);
                //}
                //var requisition_details = await Http.PostJsonAsync<List<PurchaseOrderDetailsEntity>>(Utility.BaseUrl + "api/Purchase/AddPurchaseOrderDetails", purchaseDetailsList);
                toastService.ShowSuccess("Update Successfully!!!");
            }
            catch (Exception ex)
            {

            }

        }
    }
    private bool IsValidation()
    {
        bool flag = false;
        if (purchaseOrderModel.PO_NUMBER_LONG_CODE == "" || purchaseOrderModel.PO_NUMBER_LONG_CODE == string.Empty || purchaseOrderModel.PO_NUMBER_LONG_CODE == null)
        {
            toastService.ShowWarning("Requisition No cannot be empty!");
            flag = true;
        }

        return flag;
    }

    //private void CreateOutputReport(DataSet reprotOutputData)
    //{
    //    PrintInformationOutputItem outputItem = new PrintInformationOutputItem();
    //    try
    //    {
    //        outputItem.dataSet = DS_OUTPUT_DATA;
    //        if (DS_OUTPUT_DATA != null && DS_OUTPUT_DATA.Tables[0].Rows.Count > 0)
    //        { _ReportService.output(OutputReportSupport.GetReportConfig(outputItem), outputItem.dataSet); }
    //        else { MessageBox.Show("", "Info"); }
    //    }
    //    catch (Exception ex)
    //    {  }

    //}

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JSRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IToastService toastService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
